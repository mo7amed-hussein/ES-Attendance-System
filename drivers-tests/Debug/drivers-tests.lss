
drivers-tests.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000dc  00800100  000018d4  00001968  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000179  008001dc  008001dc  00001a44  2**0
                  ALLOC
  3 .debug_aranges 00000028  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000086  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003be  00000000  00000000  00001af2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001bc  00000000  00000000  00001eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d9  00000000  00000000  0000206c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00002348  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000176  00000000  00000000  00002378  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000127  00000000  00000000  000024ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00002615  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 af 01 	jmp	0x35e	; 0x35e <__vector_5>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 7f 07 	jmp	0xefe	; 0xefe <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ed       	ldi	r30, 0xD4	; 212
      7c:	f8 e1       	ldi	r31, 0x18	; 24
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	ac 3d       	cpi	r26, 0xDC	; 220
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	13 e0       	ldi	r17, 0x03	; 3
      8c:	ac ed       	ldi	r26, 0xDC	; 220
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a5 35       	cpi	r26, 0x55	; 85
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 6c 00 	call	0xd8	; 0xd8 <main>
      9e:	0c 94 68 0c 	jmp	0x18d0	; 0x18d0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_18>:
	}
}


ISR(USART_RX_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	8f 93       	push	r24
      b2:	ef 93       	push	r30
      b4:	ff 93       	push	r31
	int bufferLen =strlen(wifiBuffer);
      b6:	ed ed       	ldi	r30, 0xDD	; 221
      b8:	f2 e0       	ldi	r31, 0x02	; 2
      ba:	01 90       	ld	r0, Z+
      bc:	00 20       	and	r0, r0
      be:	e9 f7       	brne	.-6      	; 0xba <__vector_18+0x14>
	wifiBuffer[bufferLen] = UDR0;
      c0:	80 91 c6 00 	lds	r24, 0x00C6
      c4:	31 97       	sbiw	r30, 0x01	; 1
      c6:	80 83       	st	Z, r24
	//softuart_putchar(UDR0);
}
      c8:	ff 91       	pop	r31
      ca:	ef 91       	pop	r30
      cc:	8f 91       	pop	r24
      ce:	0f 90       	pop	r0
      d0:	0f be       	out	0x3f, r0	; 63
      d2:	0f 90       	pop	r0
      d4:	1f 90       	pop	r1
      d6:	18 95       	reti

000000d8 <main>:

unsigned char *serials[] = {"12.4C.6E.8B","FF.FF.FF.FF.FF"};
uint8_t serialsCount =2;
unsigned char tmpSerial [12];	
int main(void)
{
      d8:	2f 92       	push	r2
      da:	3f 92       	push	r3
      dc:	4f 92       	push	r4
      de:	5f 92       	push	r5
      e0:	6f 92       	push	r6
      e2:	7f 92       	push	r7
      e4:	8f 92       	push	r8
      e6:	9f 92       	push	r9
      e8:	af 92       	push	r10
      ea:	bf 92       	push	r11
      ec:	cf 92       	push	r12
      ee:	df 92       	push	r13
      f0:	ef 92       	push	r14
      f2:	ff 92       	push	r15
      f4:	0f 93       	push	r16
      f6:	1f 93       	push	r17
      f8:	df 93       	push	r29
      fa:	cf 93       	push	r28
      fc:	cd b7       	in	r28, 0x3d	; 61
      fe:	de b7       	in	r29, 0x3e	; 62
     100:	67 97       	sbiw	r28, 0x17	; 23
     102:	0f b6       	in	r0, 0x3f	; 63
     104:	f8 94       	cli
     106:	de bf       	out	0x3e, r29	; 62
     108:	0f be       	out	0x3f, r0	; 63
     10a:	cd bf       	out	0x3d, r28	; 61
	
	sei();
     10c:	78 94       	sei
	//init uart
	initUsart0(9600);
     10e:	80 e8       	ldi	r24, 0x80	; 128
     110:	95 e2       	ldi	r25, 0x25	; 37
     112:	0e 94 ed 06 	call	0xdda	; 0xdda <initUsart0>
	//init spi
	//initSpiMaster();
	//_delay_ms(100);
	//init rfid
	initRfid();
     116:	0e 94 de 01 	call	0x3bc	; 0x3bc <initRfid>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     11a:	80 e5       	ldi	r24, 0x50	; 80
     11c:	93 ec       	ldi	r25, 0xC3	; 195
     11e:	01 97       	sbiw	r24, 0x01	; 1
     120:	f1 f7       	brne	.-4      	; 0x11e <main+0x46>
	_delay_ms(200);
	initPir();
     122:	0e 94 7f 01 	call	0x2fe	; 0x2fe <initPir>
     126:	80 e1       	ldi	r24, 0x10	; 16
     128:	97 e2       	ldi	r25, 0x27	; 39
     12a:	29 e1       	ldi	r18, 0x19	; 25
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	f9 01       	movw	r30, r18
     130:	31 97       	sbiw	r30, 0x01	; 1
     132:	f1 f7       	brne	.-4      	; 0x130 <main+0x58>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     134:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     136:	d9 f7       	brne	.-10     	; 0x12e <main+0x56>
	//MFRC522();
	//_delay_ms(100);
	//begin rfid
	//begin();
	//uint8_t ver = getFirmwareVersion();
	uint8_t ver = getFirmwareVer();
     138:	0e 94 f7 02 	call	0x5ee	; 0x5ee <getFirmwareVer>
     13c:	f8 2e       	mov	r15, r24
	if(!ver)
     13e:	88 23       	and	r24, r24
     140:	29 f4       	brne	.+10     	; 0x14c <main+0x74>
	{
		putsUsart0("Didn't find MFRC522 board.");
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	91 e0       	ldi	r25, 0x01	; 1
     146:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
     14a:	ff cf       	rjmp	.-2      	; 0x14a <main+0x72>
		//return;
		while(1);
	}
	
	putsUsart0("Found chip MFRC522\n");
     14c:	8b e1       	ldi	r24, 0x1B	; 27
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
	putsUsart0("firmware version is ");
     154:	8f e2       	ldi	r24, 0x2F	; 47
     156:	91 e0       	ldi	r25, 0x01	; 1
     158:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
	sprintf(tmp,"%X \n\0",ver);
     15c:	00 d0       	rcall	.+0      	; 0x15e <main+0x86>
     15e:	00 d0       	rcall	.+0      	; 0x160 <main+0x88>
     160:	00 d0       	rcall	.+0      	; 0x162 <main+0x8a>
     162:	ed b7       	in	r30, 0x3d	; 61
     164:	fe b7       	in	r31, 0x3e	; 62
     166:	31 96       	adiw	r30, 0x01	; 1
     168:	09 e0       	ldi	r16, 0x09	; 9
     16a:	12 e0       	ldi	r17, 0x02	; 2
     16c:	11 83       	std	Z+1, r17	; 0x01
     16e:	00 83       	st	Z, r16
     170:	84 e4       	ldi	r24, 0x44	; 68
     172:	91 e0       	ldi	r25, 0x01	; 1
     174:	93 83       	std	Z+3, r25	; 0x03
     176:	82 83       	std	Z+2, r24	; 0x02
     178:	f4 82       	std	Z+4, r15	; 0x04
     17a:	15 82       	std	Z+5, r1	; 0x05
     17c:	0e 94 90 09 	call	0x1320	; 0x1320 <sprintf>
	putsUsart0(tmp);
     180:	8d b7       	in	r24, 0x3d	; 61
     182:	9e b7       	in	r25, 0x3e	; 62
     184:	06 96       	adiw	r24, 0x06	; 6
     186:	0f b6       	in	r0, 0x3f	; 63
     188:	f8 94       	cli
     18a:	9e bf       	out	0x3e, r25	; 62
     18c:	0f be       	out	0x3f, r0	; 63
     18e:	8d bf       	out	0x3d, r24	; 61
     190:	c8 01       	movw	r24, r16
     192:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
	
	DDRB |= (1<<PB0);
     196:	e4 e2       	ldi	r30, 0x24	; 36
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	80 81       	ld	r24, Z
     19c:	81 60       	ori	r24, 0x01	; 1
     19e:	80 83       	st	Z, r24
		//softuart_putchar(data);
		//sprintf(tmp,"sent data %0x \n\0",data);
		//softuart_putchar('\n');
		//softuart_puts(tmp);
		
		putsUsart0("scannnig for tags ... \n");
     1a0:	0f 2e       	mov	r0, r31
     1a2:	fa e4       	ldi	r31, 0x4A	; 74
     1a4:	4f 2e       	mov	r4, r31
     1a6:	f1 e0       	ldi	r31, 0x01	; 1
     1a8:	5f 2e       	mov	r5, r31
     1aa:	f0 2d       	mov	r31, r0
		//status = requestTag(MF1_REQIDL, data);
		status = scanForTag(MF1_REQIDL, data);
     1ac:	0f 2e       	mov	r0, r31
     1ae:	f6 e0       	ldi	r31, 0x06	; 6
     1b0:	8f 2e       	mov	r8, r31
     1b2:	99 24       	eor	r9, r9
     1b4:	f0 2d       	mov	r31, r0
     1b6:	8c 0e       	add	r8, r28
     1b8:	9d 1e       	adc	r9, r29
			putsUsart0("The serial nb of the tag is:");
			//for (int i = 0; i < 4; i++) {
				//sprintf(tmp,"%X , \0",serial[i]);
				//putsUsart0(tmp);
			//}
			dumpSerial(serial,4,tmpSerial);
     1ba:	0f 2e       	mov	r0, r31
     1bc:	f1 ed       	ldi	r31, 0xD1	; 209
     1be:	2f 2e       	mov	r2, r31
     1c0:	f2 e0       	ldi	r31, 0x02	; 2
     1c2:	3f 2e       	mov	r3, r31
     1c4:	f0 2d       	mov	r31, r0
			putsUsart0(tmpSerial);
			for(int i = 0 ;i<serialsCount;i++)
			{
				if(strcmp(tmpSerial,serials[i])==0)
				{
					putsUsart0("\nauthenticated user\n");
     1c6:	8e e9       	ldi	r24, 0x9E	; 158
     1c8:	91 e0       	ldi	r25, 0x01	; 1
     1ca:	8e 8b       	std	Y+22, r24	; 0x16
     1cc:	9f 8b       	std	Y+23, r25	; 0x17
			}
			haltTag();
		}
		
		//data++;
		PORTB |= (1<<PB0);
     1ce:	0f 2e       	mov	r0, r31
     1d0:	f5 e2       	ldi	r31, 0x25	; 37
     1d2:	af 2e       	mov	r10, r31
     1d4:	bb 24       	eor	r11, r11
     1d6:	f0 2d       	mov	r31, r0
     1d8:	0f 2e       	mov	r0, r31
     1da:	f0 e1       	ldi	r31, 0x10	; 16
     1dc:	6f 2e       	mov	r6, r31
     1de:	f7 e2       	ldi	r31, 0x27	; 39
     1e0:	7f 2e       	mov	r7, r31
     1e2:	f0 2d       	mov	r31, r0
     1e4:	09 e1       	ldi	r16, 0x19	; 25
     1e6:	10 e0       	ldi	r17, 0x00	; 0
		//softuart_putchar(data);
		//sprintf(tmp,"sent data %0x \n\0",data);
		//softuart_putchar('\n');
		//softuart_puts(tmp);
		
		putsUsart0("scannnig for tags ... \n");
     1e8:	c2 01       	movw	r24, r4
     1ea:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
		//status = requestTag(MF1_REQIDL, data);
		status = scanForTag(MF1_REQIDL, data);
     1ee:	86 e2       	ldi	r24, 0x26	; 38
     1f0:	b4 01       	movw	r22, r8
     1f2:	0e 94 c3 04 	call	0x986	; 0x986 <scanForTag>
		if(status == MI_OK )
     1f6:	88 23       	and	r24, r24
     1f8:	09 f0       	breq	.+2      	; 0x1fc <main+0x124>
     1fa:	6a c0       	rjmp	.+212    	; 0x2d0 <main+0x1f8>
		{
			putsUsart0("tag detected \n");
     1fc:	82 e6       	ldi	r24, 0x62	; 98
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
			sprintf(tmp,"type %X , %X \n\0",data[0],data[1]);
     204:	ed b7       	in	r30, 0x3d	; 61
     206:	fe b7       	in	r31, 0x3e	; 62
     208:	38 97       	sbiw	r30, 0x08	; 8
     20a:	0f b6       	in	r0, 0x3f	; 63
     20c:	f8 94       	cli
     20e:	fe bf       	out	0x3e, r31	; 62
     210:	0f be       	out	0x3f, r0	; 63
     212:	ed bf       	out	0x3d, r30	; 61
     214:	31 96       	adiw	r30, 0x01	; 1
     216:	89 e0       	ldi	r24, 0x09	; 9
     218:	92 e0       	ldi	r25, 0x02	; 2
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
     21e:	81 e7       	ldi	r24, 0x71	; 113
     220:	91 e0       	ldi	r25, 0x01	; 1
     222:	93 83       	std	Z+3, r25	; 0x03
     224:	82 83       	std	Z+2, r24	; 0x02
     226:	8e 81       	ldd	r24, Y+6	; 0x06
     228:	84 83       	std	Z+4, r24	; 0x04
     22a:	15 82       	std	Z+5, r1	; 0x05
     22c:	8f 81       	ldd	r24, Y+7	; 0x07
     22e:	86 83       	std	Z+6, r24	; 0x06
     230:	17 82       	std	Z+7, r1	; 0x07
     232:	0e 94 90 09 	call	0x1320	; 0x1320 <sprintf>
			putsUsart0(tmp);
     236:	ed b7       	in	r30, 0x3d	; 61
     238:	fe b7       	in	r31, 0x3e	; 62
     23a:	38 96       	adiw	r30, 0x08	; 8
     23c:	0f b6       	in	r0, 0x3f	; 63
     23e:	f8 94       	cli
     240:	fe bf       	out	0x3e, r31	; 62
     242:	0f be       	out	0x3f, r0	; 63
     244:	ed bf       	out	0x3d, r30	; 61
     246:	89 e0       	ldi	r24, 0x09	; 9
     248:	92 e0       	ldi	r25, 0x02	; 2
     24a:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
			status = antiCollision(data);
     24e:	c4 01       	movw	r24, r8
     250:	0e 94 ae 05 	call	0xb5c	; 0xb5c <antiCollision>
			memcpy(serial, data, 5);
     254:	de 01       	movw	r26, r28
     256:	11 96       	adiw	r26, 0x01	; 1
     258:	f4 01       	movw	r30, r8
     25a:	85 e0       	ldi	r24, 0x05	; 5
     25c:	01 90       	ld	r0, Z+
     25e:	0d 92       	st	X+, r0
     260:	81 50       	subi	r24, 0x01	; 1
     262:	e1 f7       	brne	.-8      	; 0x25c <main+0x184>
//
			putsUsart0("The serial nb of the tag is:");
     264:	81 e8       	ldi	r24, 0x81	; 129
     266:	91 e0       	ldi	r25, 0x01	; 1
     268:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
			//for (int i = 0; i < 4; i++) {
				//sprintf(tmp,"%X , \0",serial[i]);
				//putsUsart0(tmp);
			//}
			dumpSerial(serial,4,tmpSerial);
     26c:	ce 01       	movw	r24, r28
     26e:	01 96       	adiw	r24, 0x01	; 1
     270:	64 e0       	ldi	r22, 0x04	; 4
     272:	a1 01       	movw	r20, r2
     274:	0e 94 22 06 	call	0xc44	; 0xc44 <dumpSerial>
			putsUsart0(tmpSerial);
     278:	c1 01       	movw	r24, r2
     27a:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
			for(int i = 0 ;i<serialsCount;i++)
     27e:	80 91 db 01 	lds	r24, 0x01DB
     282:	88 23       	and	r24, r24
     284:	19 f1       	breq	.+70     	; 0x2cc <main+0x1f4>
     286:	0f 2e       	mov	r0, r31
     288:	f7 ed       	ldi	r31, 0xD7	; 215
     28a:	cf 2e       	mov	r12, r31
     28c:	f1 e0       	ldi	r31, 0x01	; 1
     28e:	df 2e       	mov	r13, r31
     290:	f0 2d       	mov	r31, r0
     292:	ee 24       	eor	r14, r14
     294:	ff 24       	eor	r15, r15
			{
				if(strcmp(tmpSerial,serials[i])==0)
     296:	f6 01       	movw	r30, r12
     298:	60 81       	ld	r22, Z
     29a:	71 81       	ldd	r23, Z+1	; 0x01
     29c:	c1 01       	movw	r24, r2
     29e:	0e 94 87 09 	call	0x130e	; 0x130e <strcmp>
     2a2:	28 2f       	mov	r18, r24
     2a4:	39 2f       	mov	r19, r25
     2a6:	23 2b       	or	r18, r19
     2a8:	21 f4       	brne	.+8      	; 0x2b2 <main+0x1da>
				{
					putsUsart0("\nauthenticated user\n");
     2aa:	8e 89       	ldd	r24, Y+22	; 0x16
     2ac:	9f 89       	ldd	r25, Y+23	; 0x17
     2ae:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
				//sprintf(tmp,"%X , \0",serial[i]);
				//putsUsart0(tmp);
			//}
			dumpSerial(serial,4,tmpSerial);
			putsUsart0(tmpSerial);
			for(int i = 0 ;i<serialsCount;i++)
     2b2:	08 94       	sec
     2b4:	e1 1c       	adc	r14, r1
     2b6:	f1 1c       	adc	r15, r1
     2b8:	82 e0       	ldi	r24, 0x02	; 2
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	c8 0e       	add	r12, r24
     2be:	d9 1e       	adc	r13, r25
     2c0:	80 91 db 01 	lds	r24, 0x01DB
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	e8 16       	cp	r14, r24
     2c8:	f9 06       	cpc	r15, r25
     2ca:	2c f3       	brlt	.-54     	; 0x296 <main+0x1be>
				if(strcmp(tmpSerial,serials[i])==0)
				{
					putsUsart0("\nauthenticated user\n");
				}
			}
			haltTag();
     2cc:	0e 94 70 05 	call	0xae0	; 0xae0 <haltTag>
		}
		
		//data++;
		PORTB |= (1<<PB0);
     2d0:	f5 01       	movw	r30, r10
     2d2:	80 81       	ld	r24, Z
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	80 83       	st	Z, r24
     2d8:	93 01       	movw	r18, r6
     2da:	c8 01       	movw	r24, r16
     2dc:	01 97       	sbiw	r24, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <main+0x204>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2e0:	21 50       	subi	r18, 0x01	; 1
     2e2:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2e4:	d1 f7       	brne	.-12     	; 0x2da <main+0x202>
		_delay_ms(1000);
		PORTB &= ~(1<<PB0);
     2e6:	f5 01       	movw	r30, r10
     2e8:	80 81       	ld	r24, Z
     2ea:	8e 7f       	andi	r24, 0xFE	; 254
     2ec:	80 83       	st	Z, r24
     2ee:	93 01       	movw	r18, r6
     2f0:	c8 01       	movw	r24, r16
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	f1 f7       	brne	.-4      	; 0x2f2 <main+0x21a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2f6:	21 50       	subi	r18, 0x01	; 1
     2f8:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2fa:	d1 f7       	brne	.-12     	; 0x2f0 <main+0x218>
     2fc:	75 cf       	rjmp	.-278    	; 0x1e8 <main+0x110>

000002fe <initPir>:
     2fe:	df 93       	push	r29
     300:	cf 93       	push	r28
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
     306:	aa e2       	ldi	r26, 0x2A	; 42
     308:	b0 e0       	ldi	r27, 0x00	; 0
     30a:	ea e2       	ldi	r30, 0x2A	; 42
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	8f 77       	andi	r24, 0x7F	; 127
     312:	8c 93       	st	X, r24
     314:	a4 e2       	ldi	r26, 0x24	; 36
     316:	b0 e0       	ldi	r27, 0x00	; 0
     318:	e4 e2       	ldi	r30, 0x24	; 36
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	80 81       	ld	r24, Z
     31e:	80 64       	ori	r24, 0x40	; 64
     320:	8c 93       	st	X, r24
     322:	a5 e2       	ldi	r26, 0x25	; 37
     324:	b0 e0       	ldi	r27, 0x00	; 0
     326:	e5 e2       	ldi	r30, 0x25	; 37
     328:	f0 e0       	ldi	r31, 0x00	; 0
     32a:	80 81       	ld	r24, Z
     32c:	80 64       	ori	r24, 0x40	; 64
     32e:	8c 93       	st	X, r24
     330:	e8 e6       	ldi	r30, 0x68	; 104
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	84 e0       	ldi	r24, 0x04	; 4
     336:	80 83       	st	Z, r24
     338:	ed e6       	ldi	r30, 0x6D	; 109
     33a:	f0 e0       	ldi	r31, 0x00	; 0
     33c:	80 e8       	ldi	r24, 0x80	; 128
     33e:	80 83       	st	Z, r24
     340:	78 94       	sei
     342:	cf 91       	pop	r28
     344:	df 91       	pop	r29
     346:	08 95       	ret

00000348 <turnLight>:
     348:	df 93       	push	r29
     34a:	cf 93       	push	r28
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	8e ec       	ldi	r24, 0xCE	; 206
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	0e 94 54 07 	call	0xea8	; 0xea8 <putsUsart0>
     358:	cf 91       	pop	r28
     35a:	df 91       	pop	r29
     35c:	08 95       	ret

0000035e <__vector_5>:
     35e:	1f 92       	push	r1
     360:	0f 92       	push	r0
     362:	0f b6       	in	r0, 0x3f	; 63
     364:	0f 92       	push	r0
     366:	11 24       	eor	r1, r1
     368:	2f 93       	push	r18
     36a:	3f 93       	push	r19
     36c:	4f 93       	push	r20
     36e:	5f 93       	push	r21
     370:	6f 93       	push	r22
     372:	7f 93       	push	r23
     374:	8f 93       	push	r24
     376:	9f 93       	push	r25
     378:	af 93       	push	r26
     37a:	bf 93       	push	r27
     37c:	ef 93       	push	r30
     37e:	ff 93       	push	r31
     380:	df 93       	push	r29
     382:	cf 93       	push	r28
     384:	cd b7       	in	r28, 0x3d	; 61
     386:	de b7       	in	r29, 0x3e	; 62
     388:	e9 e2       	ldi	r30, 0x29	; 41
     38a:	f0 e0       	ldi	r31, 0x00	; 0
     38c:	80 81       	ld	r24, Z
     38e:	88 23       	and	r24, r24
     390:	14 f4       	brge	.+4      	; 0x396 <__vector_5+0x38>
     392:	0e 94 a4 01 	call	0x348	; 0x348 <turnLight>
     396:	cf 91       	pop	r28
     398:	df 91       	pop	r29
     39a:	ff 91       	pop	r31
     39c:	ef 91       	pop	r30
     39e:	bf 91       	pop	r27
     3a0:	af 91       	pop	r26
     3a2:	9f 91       	pop	r25
     3a4:	8f 91       	pop	r24
     3a6:	7f 91       	pop	r23
     3a8:	6f 91       	pop	r22
     3aa:	5f 91       	pop	r21
     3ac:	4f 91       	pop	r20
     3ae:	3f 91       	pop	r19
     3b0:	2f 91       	pop	r18
     3b2:	0f 90       	pop	r0
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	0f 90       	pop	r0
     3b8:	1f 90       	pop	r1
     3ba:	18 95       	reti

000003bc <initRfid>:
     3bc:	df 93       	push	r29
     3be:	cf 93       	push	r28
     3c0:	cd b7       	in	r28, 0x3d	; 61
     3c2:	de b7       	in	r29, 0x3e	; 62
     3c4:	2e 97       	sbiw	r28, 0x0e	; 14
     3c6:	0f b6       	in	r0, 0x3f	; 63
     3c8:	f8 94       	cli
     3ca:	de bf       	out	0x3e, r29	; 62
     3cc:	0f be       	out	0x3f, r0	; 63
     3ce:	cd bf       	out	0x3d, r28	; 61
     3d0:	0e 94 b6 06 	call	0xd6c	; 0xd6c <initSpiMaster>
     3d4:	a5 e2       	ldi	r26, 0x25	; 37
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e5 e2       	ldi	r30, 0x25	; 37
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	80 81       	ld	r24, Z
     3de:	84 60       	ori	r24, 0x04	; 4
     3e0:	8c 93       	st	X, r24
     3e2:	a4 e2       	ldi	r26, 0x24	; 36
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	e4 e2       	ldi	r30, 0x24	; 36
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	80 81       	ld	r24, Z
     3ec:	82 60       	ori	r24, 0x02	; 2
     3ee:	8c 93       	st	X, r24
     3f0:	a5 e2       	ldi	r26, 0x25	; 37
     3f2:	b0 e0       	ldi	r27, 0x00	; 0
     3f4:	e5 e2       	ldi	r30, 0x25	; 37
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	80 81       	ld	r24, Z
     3fa:	82 60       	ori	r24, 0x02	; 2
     3fc:	8c 93       	st	X, r24
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	a8 ec       	ldi	r26, 0xC8	; 200
     404:	b2 e4       	ldi	r27, 0x42	; 66
     406:	8b 87       	std	Y+11, r24	; 0x0b
     408:	9c 87       	std	Y+12, r25	; 0x0c
     40a:	ad 87       	std	Y+13, r26	; 0x0d
     40c:	be 87       	std	Y+14, r27	; 0x0e
     40e:	6b 85       	ldd	r22, Y+11	; 0x0b
     410:	7c 85       	ldd	r23, Y+12	; 0x0c
     412:	8d 85       	ldd	r24, Y+13	; 0x0d
     414:	9e 85       	ldd	r25, Y+14	; 0x0e
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	4a e7       	ldi	r20, 0x7A	; 122
     41c:	53 e4       	ldi	r21, 0x43	; 67
     41e:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__mulsf3>
     422:	dc 01       	movw	r26, r24
     424:	cb 01       	movw	r24, r22
     426:	8f 83       	std	Y+7, r24	; 0x07
     428:	98 87       	std	Y+8, r25	; 0x08
     42a:	a9 87       	std	Y+9, r26	; 0x09
     42c:	ba 87       	std	Y+10, r27	; 0x0a
     42e:	6f 81       	ldd	r22, Y+7	; 0x07
     430:	78 85       	ldd	r23, Y+8	; 0x08
     432:	89 85       	ldd	r24, Y+9	; 0x09
     434:	9a 85       	ldd	r25, Y+10	; 0x0a
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	40 e8       	ldi	r20, 0x80	; 128
     43c:	5f e3       	ldi	r21, 0x3F	; 63
     43e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__cmpsf2>
     442:	88 23       	and	r24, r24
     444:	2c f4       	brge	.+10     	; 0x450 <initRfid+0x94>
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	9e 83       	std	Y+6, r25	; 0x06
     44c:	8d 83       	std	Y+5, r24	; 0x05
     44e:	3f c0       	rjmp	.+126    	; 0x4ce <initRfid+0x112>
     450:	6f 81       	ldd	r22, Y+7	; 0x07
     452:	78 85       	ldd	r23, Y+8	; 0x08
     454:	89 85       	ldd	r24, Y+9	; 0x09
     456:	9a 85       	ldd	r25, Y+10	; 0x0a
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	3f ef       	ldi	r19, 0xFF	; 255
     45c:	4f e7       	ldi	r20, 0x7F	; 127
     45e:	57 e4       	ldi	r21, 0x47	; 71
     460:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__gesf2>
     464:	18 16       	cp	r1, r24
     466:	4c f5       	brge	.+82     	; 0x4ba <initRfid+0xfe>
     468:	6b 85       	ldd	r22, Y+11	; 0x0b
     46a:	7c 85       	ldd	r23, Y+12	; 0x0c
     46c:	8d 85       	ldd	r24, Y+13	; 0x0d
     46e:	9e 85       	ldd	r25, Y+14	; 0x0e
     470:	20 e0       	ldi	r18, 0x00	; 0
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	40 e2       	ldi	r20, 0x20	; 32
     476:	51 e4       	ldi	r21, 0x41	; 65
     478:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__mulsf3>
     47c:	dc 01       	movw	r26, r24
     47e:	cb 01       	movw	r24, r22
     480:	bc 01       	movw	r22, r24
     482:	cd 01       	movw	r24, r26
     484:	0e 94 5d 08 	call	0x10ba	; 0x10ba <__fixunssfsi>
     488:	dc 01       	movw	r26, r24
     48a:	cb 01       	movw	r24, r22
     48c:	9e 83       	std	Y+6, r25	; 0x06
     48e:	8d 83       	std	Y+5, r24	; 0x05
     490:	0f c0       	rjmp	.+30     	; 0x4b0 <initRfid+0xf4>
     492:	89 e1       	ldi	r24, 0x19	; 25
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	9c 83       	std	Y+4, r25	; 0x04
     498:	8b 83       	std	Y+3, r24	; 0x03
     49a:	8b 81       	ldd	r24, Y+3	; 0x03
     49c:	9c 81       	ldd	r25, Y+4	; 0x04
     49e:	01 97       	sbiw	r24, 0x01	; 1
     4a0:	f1 f7       	brne	.-4      	; 0x49e <initRfid+0xe2>
     4a2:	9c 83       	std	Y+4, r25	; 0x04
     4a4:	8b 83       	std	Y+3, r24	; 0x03
     4a6:	8d 81       	ldd	r24, Y+5	; 0x05
     4a8:	9e 81       	ldd	r25, Y+6	; 0x06
     4aa:	01 97       	sbiw	r24, 0x01	; 1
     4ac:	9e 83       	std	Y+6, r25	; 0x06
     4ae:	8d 83       	std	Y+5, r24	; 0x05
     4b0:	8d 81       	ldd	r24, Y+5	; 0x05
     4b2:	9e 81       	ldd	r25, Y+6	; 0x06
     4b4:	00 97       	sbiw	r24, 0x00	; 0
     4b6:	69 f7       	brne	.-38     	; 0x492 <initRfid+0xd6>
     4b8:	14 c0       	rjmp	.+40     	; 0x4e2 <initRfid+0x126>
     4ba:	6f 81       	ldd	r22, Y+7	; 0x07
     4bc:	78 85       	ldd	r23, Y+8	; 0x08
     4be:	89 85       	ldd	r24, Y+9	; 0x09
     4c0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4c2:	0e 94 5d 08 	call	0x10ba	; 0x10ba <__fixunssfsi>
     4c6:	dc 01       	movw	r26, r24
     4c8:	cb 01       	movw	r24, r22
     4ca:	9e 83       	std	Y+6, r25	; 0x06
     4cc:	8d 83       	std	Y+5, r24	; 0x05
     4ce:	8d 81       	ldd	r24, Y+5	; 0x05
     4d0:	9e 81       	ldd	r25, Y+6	; 0x06
     4d2:	9a 83       	std	Y+2, r25	; 0x02
     4d4:	89 83       	std	Y+1, r24	; 0x01
     4d6:	89 81       	ldd	r24, Y+1	; 0x01
     4d8:	9a 81       	ldd	r25, Y+2	; 0x02
     4da:	01 97       	sbiw	r24, 0x01	; 1
     4dc:	f1 f7       	brne	.-4      	; 0x4da <initRfid+0x11e>
     4de:	9a 83       	std	Y+2, r25	; 0x02
     4e0:	89 83       	std	Y+1, r24	; 0x01
     4e2:	a5 e2       	ldi	r26, 0x25	; 37
     4e4:	b0 e0       	ldi	r27, 0x00	; 0
     4e6:	e5 e2       	ldi	r30, 0x25	; 37
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 81       	ld	r24, Z
     4ec:	84 60       	ori	r24, 0x04	; 4
     4ee:	8c 93       	st	X, r24
     4f0:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <resetRfid>
     4f4:	8a e2       	ldi	r24, 0x2A	; 42
     4f6:	6d e8       	ldi	r22, 0x8D	; 141
     4f8:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     4fc:	8b e2       	ldi	r24, 0x2B	; 43
     4fe:	6e e3       	ldi	r22, 0x3E	; 62
     500:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     504:	8d e2       	ldi	r24, 0x2D	; 45
     506:	6e e1       	ldi	r22, 0x1E	; 30
     508:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     50c:	8c e2       	ldi	r24, 0x2C	; 44
     50e:	60 e0       	ldi	r22, 0x00	; 0
     510:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     514:	85 e1       	ldi	r24, 0x15	; 21
     516:	60 e4       	ldi	r22, 0x40	; 64
     518:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     51c:	81 e1       	ldi	r24, 0x11	; 17
     51e:	6d e3       	ldi	r22, 0x3D	; 61
     520:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     524:	84 e1       	ldi	r24, 0x14	; 20
     526:	63 e0       	ldi	r22, 0x03	; 3
     528:	0e 94 05 03 	call	0x60a	; 0x60a <setRegBits>
     52c:	2e 96       	adiw	r28, 0x0e	; 14
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
     538:	cf 91       	pop	r28
     53a:	df 91       	pop	r29
     53c:	08 95       	ret

0000053e <writeToReg>:
     53e:	df 93       	push	r29
     540:	cf 93       	push	r28
     542:	00 d0       	rcall	.+0      	; 0x544 <writeToReg+0x6>
     544:	cd b7       	in	r28, 0x3d	; 61
     546:	de b7       	in	r29, 0x3e	; 62
     548:	89 83       	std	Y+1, r24	; 0x01
     54a:	6a 83       	std	Y+2, r22	; 0x02
     54c:	a5 e2       	ldi	r26, 0x25	; 37
     54e:	b0 e0       	ldi	r27, 0x00	; 0
     550:	e5 e2       	ldi	r30, 0x25	; 37
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	80 81       	ld	r24, Z
     556:	8b 7f       	andi	r24, 0xFB	; 251
     558:	8c 93       	st	X, r24
     55a:	89 81       	ldd	r24, Y+1	; 0x01
     55c:	88 2f       	mov	r24, r24
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	88 0f       	add	r24, r24
     562:	99 1f       	adc	r25, r25
     564:	8e 77       	andi	r24, 0x7E	; 126
     566:	0e 94 d6 06 	call	0xdac	; 0xdac <tranceiveSpi>
     56a:	8a 81       	ldd	r24, Y+2	; 0x02
     56c:	0e 94 d6 06 	call	0xdac	; 0xdac <tranceiveSpi>
     570:	a5 e2       	ldi	r26, 0x25	; 37
     572:	b0 e0       	ldi	r27, 0x00	; 0
     574:	e5 e2       	ldi	r30, 0x25	; 37
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	80 81       	ld	r24, Z
     57a:	84 60       	ori	r24, 0x04	; 4
     57c:	8c 93       	st	X, r24
     57e:	0f 90       	pop	r0
     580:	0f 90       	pop	r0
     582:	cf 91       	pop	r28
     584:	df 91       	pop	r29
     586:	08 95       	ret

00000588 <readFromReg>:
     588:	df 93       	push	r29
     58a:	cf 93       	push	r28
     58c:	00 d0       	rcall	.+0      	; 0x58e <readFromReg+0x6>
     58e:	cd b7       	in	r28, 0x3d	; 61
     590:	de b7       	in	r29, 0x3e	; 62
     592:	8a 83       	std	Y+2, r24	; 0x02
     594:	a5 e2       	ldi	r26, 0x25	; 37
     596:	b0 e0       	ldi	r27, 0x00	; 0
     598:	e5 e2       	ldi	r30, 0x25	; 37
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	80 81       	ld	r24, Z
     59e:	8b 7f       	andi	r24, 0xFB	; 251
     5a0:	8c 93       	st	X, r24
     5a2:	8a 81       	ldd	r24, Y+2	; 0x02
     5a4:	88 2f       	mov	r24, r24
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	88 0f       	add	r24, r24
     5aa:	99 1f       	adc	r25, r25
     5ac:	8e 77       	andi	r24, 0x7E	; 126
     5ae:	80 68       	ori	r24, 0x80	; 128
     5b0:	0e 94 d6 06 	call	0xdac	; 0xdac <tranceiveSpi>
     5b4:	89 83       	std	Y+1, r24	; 0x01
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	0e 94 d6 06 	call	0xdac	; 0xdac <tranceiveSpi>
     5bc:	89 83       	std	Y+1, r24	; 0x01
     5be:	a5 e2       	ldi	r26, 0x25	; 37
     5c0:	b0 e0       	ldi	r27, 0x00	; 0
     5c2:	e5 e2       	ldi	r30, 0x25	; 37
     5c4:	f0 e0       	ldi	r31, 0x00	; 0
     5c6:	80 81       	ld	r24, Z
     5c8:	84 60       	ori	r24, 0x04	; 4
     5ca:	8c 93       	st	X, r24
     5cc:	89 81       	ldd	r24, Y+1	; 0x01
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	cf 91       	pop	r28
     5d4:	df 91       	pop	r29
     5d6:	08 95       	ret

000005d8 <resetRfid>:
     5d8:	df 93       	push	r29
     5da:	cf 93       	push	r28
     5dc:	cd b7       	in	r28, 0x3d	; 61
     5de:	de b7       	in	r29, 0x3e	; 62
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	6f e0       	ldi	r22, 0x0F	; 15
     5e4:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     5e8:	cf 91       	pop	r28
     5ea:	df 91       	pop	r29
     5ec:	08 95       	ret

000005ee <getFirmwareVer>:
     5ee:	df 93       	push	r29
     5f0:	cf 93       	push	r28
     5f2:	0f 92       	push	r0
     5f4:	cd b7       	in	r28, 0x3d	; 61
     5f6:	de b7       	in	r29, 0x3e	; 62
     5f8:	87 e3       	ldi	r24, 0x37	; 55
     5fa:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     5fe:	89 83       	std	Y+1, r24	; 0x01
     600:	89 81       	ldd	r24, Y+1	; 0x01
     602:	0f 90       	pop	r0
     604:	cf 91       	pop	r28
     606:	df 91       	pop	r29
     608:	08 95       	ret

0000060a <setRegBits>:
     60a:	df 93       	push	r29
     60c:	cf 93       	push	r28
     60e:	00 d0       	rcall	.+0      	; 0x610 <setRegBits+0x6>
     610:	0f 92       	push	r0
     612:	cd b7       	in	r28, 0x3d	; 61
     614:	de b7       	in	r29, 0x3e	; 62
     616:	8a 83       	std	Y+2, r24	; 0x02
     618:	6b 83       	std	Y+3, r22	; 0x03
     61a:	8a 81       	ldd	r24, Y+2	; 0x02
     61c:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     620:	89 83       	std	Y+1, r24	; 0x01
     622:	99 81       	ldd	r25, Y+1	; 0x01
     624:	8b 81       	ldd	r24, Y+3	; 0x03
     626:	89 2b       	or	r24, r25
     628:	89 83       	std	Y+1, r24	; 0x01
     62a:	8a 81       	ldd	r24, Y+2	; 0x02
     62c:	69 81       	ldd	r22, Y+1	; 0x01
     62e:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     632:	0f 90       	pop	r0
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	cf 91       	pop	r28
     63a:	df 91       	pop	r29
     63c:	08 95       	ret

0000063e <clearRegBits>:
     63e:	df 93       	push	r29
     640:	cf 93       	push	r28
     642:	00 d0       	rcall	.+0      	; 0x644 <clearRegBits+0x6>
     644:	0f 92       	push	r0
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	8a 83       	std	Y+2, r24	; 0x02
     64c:	6b 83       	std	Y+3, r22	; 0x03
     64e:	8a 81       	ldd	r24, Y+2	; 0x02
     650:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	8b 81       	ldd	r24, Y+3	; 0x03
     658:	98 2f       	mov	r25, r24
     65a:	90 95       	com	r25
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	89 23       	and	r24, r25
     660:	89 83       	std	Y+1, r24	; 0x01
     662:	8a 81       	ldd	r24, Y+2	; 0x02
     664:	69 81       	ldd	r22, Y+1	; 0x01
     666:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     66a:	0f 90       	pop	r0
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	cf 91       	pop	r28
     672:	df 91       	pop	r29
     674:	08 95       	ret

00000676 <sendTagCommand>:
     676:	0f 93       	push	r16
     678:	1f 93       	push	r17
     67a:	df 93       	push	r29
     67c:	cf 93       	push	r28
     67e:	cd b7       	in	r28, 0x3d	; 61
     680:	de b7       	in	r29, 0x3e	; 62
     682:	a1 97       	sbiw	r28, 0x21	; 33
     684:	0f b6       	in	r0, 0x3f	; 63
     686:	f8 94       	cli
     688:	de bf       	out	0x3e, r29	; 62
     68a:	0f be       	out	0x3f, r0	; 63
     68c:	cd bf       	out	0x3d, r28	; 61
     68e:	8f 8b       	std	Y+23, r24	; 0x17
     690:	79 8f       	std	Y+25, r23	; 0x19
     692:	68 8f       	std	Y+24, r22	; 0x18
     694:	5b 8f       	std	Y+27, r21	; 0x1b
     696:	4a 8f       	std	Y+26, r20	; 0x1a
     698:	3d 8f       	std	Y+29, r19	; 0x1d
     69a:	2c 8f       	std	Y+28, r18	; 0x1c
     69c:	1f 8f       	std	Y+31, r17	; 0x1f
     69e:	0e 8f       	std	Y+30, r16	; 0x1e
     6a0:	82 e0       	ldi	r24, 0x02	; 2
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	9e 8b       	std	Y+22, r25	; 0x16
     6a6:	8d 8b       	std	Y+21, r24	; 0x15
     6a8:	1c 8a       	std	Y+20, r1	; 0x14
     6aa:	1b 8a       	std	Y+19, r1	; 0x13
     6ac:	8f 89       	ldd	r24, Y+23	; 0x17
     6ae:	28 2f       	mov	r18, r24
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	39 a3       	std	Y+33, r19	; 0x21
     6b4:	28 a3       	std	Y+32, r18	; 0x20
     6b6:	88 a1       	ldd	r24, Y+32	; 0x20
     6b8:	99 a1       	ldd	r25, Y+33	; 0x21
     6ba:	8c 30       	cpi	r24, 0x0C	; 12
     6bc:	91 05       	cpc	r25, r1
     6be:	51 f0       	breq	.+20     	; 0x6d4 <sendTagCommand+0x5e>
     6c0:	e8 a1       	ldd	r30, Y+32	; 0x20
     6c2:	f9 a1       	ldd	r31, Y+33	; 0x21
     6c4:	ee 30       	cpi	r30, 0x0E	; 14
     6c6:	f1 05       	cpc	r31, r1
     6c8:	49 f4       	brne	.+18     	; 0x6dc <sendTagCommand+0x66>
     6ca:	82 e1       	ldi	r24, 0x12	; 18
     6cc:	8c 8b       	std	Y+20, r24	; 0x14
     6ce:	80 e1       	ldi	r24, 0x10	; 16
     6d0:	8b 8b       	std	Y+19, r24	; 0x13
     6d2:	04 c0       	rjmp	.+8      	; 0x6dc <sendTagCommand+0x66>
     6d4:	87 e7       	ldi	r24, 0x77	; 119
     6d6:	8c 8b       	std	Y+20, r24	; 0x14
     6d8:	80 e3       	ldi	r24, 0x30	; 48
     6da:	8b 8b       	std	Y+19, r24	; 0x13
     6dc:	8c 89       	ldd	r24, Y+20	; 0x14
     6de:	98 2f       	mov	r25, r24
     6e0:	90 68       	ori	r25, 0x80	; 128
     6e2:	82 e0       	ldi	r24, 0x02	; 2
     6e4:	69 2f       	mov	r22, r25
     6e6:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     6ea:	84 e0       	ldi	r24, 0x04	; 4
     6ec:	60 e8       	ldi	r22, 0x80	; 128
     6ee:	0e 94 1f 03 	call	0x63e	; 0x63e <clearRegBits>
     6f2:	8a e0       	ldi	r24, 0x0A	; 10
     6f4:	60 e8       	ldi	r22, 0x80	; 128
     6f6:	0e 94 05 03 	call	0x60a	; 0x60a <setRegBits>
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     702:	18 8a       	std	Y+16, r1	; 0x10
     704:	1f 86       	std	Y+15, r1	; 0x0f
     706:	11 c0       	rjmp	.+34     	; 0x72a <sendTagCommand+0xb4>
     708:	2f 85       	ldd	r18, Y+15	; 0x0f
     70a:	38 89       	ldd	r19, Y+16	; 0x10
     70c:	88 8d       	ldd	r24, Y+24	; 0x18
     70e:	99 8d       	ldd	r25, Y+25	; 0x19
     710:	fc 01       	movw	r30, r24
     712:	e2 0f       	add	r30, r18
     714:	f3 1f       	adc	r31, r19
     716:	90 81       	ld	r25, Z
     718:	89 e0       	ldi	r24, 0x09	; 9
     71a:	69 2f       	mov	r22, r25
     71c:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     720:	8f 85       	ldd	r24, Y+15	; 0x0f
     722:	98 89       	ldd	r25, Y+16	; 0x10
     724:	01 96       	adiw	r24, 0x01	; 1
     726:	98 8b       	std	Y+16, r25	; 0x10
     728:	8f 87       	std	Y+15, r24	; 0x0f
     72a:	2f 85       	ldd	r18, Y+15	; 0x0f
     72c:	38 89       	ldd	r19, Y+16	; 0x10
     72e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     730:	9b 8d       	ldd	r25, Y+27	; 0x1b
     732:	28 17       	cp	r18, r24
     734:	39 07       	cpc	r19, r25
     736:	44 f3       	brlt	.-48     	; 0x708 <sendTagCommand+0x92>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	6f 89       	ldd	r22, Y+23	; 0x17
     73c:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     740:	8f 89       	ldd	r24, Y+23	; 0x17
     742:	8c 30       	cpi	r24, 0x0C	; 12
     744:	21 f4       	brne	.+8      	; 0x74e <sendTagCommand+0xd8>
     746:	8d e0       	ldi	r24, 0x0D	; 13
     748:	60 e8       	ldi	r22, 0x80	; 128
     74a:	0e 94 05 03 	call	0x60a	; 0x60a <setRegBits>
     74e:	89 e1       	ldi	r24, 0x19	; 25
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	98 8b       	std	Y+16, r25	; 0x10
     754:	8f 87       	std	Y+15, r24	; 0x0f
     756:	80 e0       	ldi	r24, 0x00	; 0
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	a0 e8       	ldi	r26, 0x80	; 128
     75c:	bf e3       	ldi	r27, 0x3F	; 63
     75e:	8b 87       	std	Y+11, r24	; 0x0b
     760:	9c 87       	std	Y+12, r25	; 0x0c
     762:	ad 87       	std	Y+13, r26	; 0x0d
     764:	be 87       	std	Y+14, r27	; 0x0e
     766:	6b 85       	ldd	r22, Y+11	; 0x0b
     768:	7c 85       	ldd	r23, Y+12	; 0x0c
     76a:	8d 85       	ldd	r24, Y+13	; 0x0d
     76c:	9e 85       	ldd	r25, Y+14	; 0x0e
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	4a e7       	ldi	r20, 0x7A	; 122
     774:	53 e4       	ldi	r21, 0x43	; 67
     776:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__mulsf3>
     77a:	dc 01       	movw	r26, r24
     77c:	cb 01       	movw	r24, r22
     77e:	8f 83       	std	Y+7, r24	; 0x07
     780:	98 87       	std	Y+8, r25	; 0x08
     782:	a9 87       	std	Y+9, r26	; 0x09
     784:	ba 87       	std	Y+10, r27	; 0x0a
     786:	6f 81       	ldd	r22, Y+7	; 0x07
     788:	78 85       	ldd	r23, Y+8	; 0x08
     78a:	89 85       	ldd	r24, Y+9	; 0x09
     78c:	9a 85       	ldd	r25, Y+10	; 0x0a
     78e:	20 e0       	ldi	r18, 0x00	; 0
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	40 e8       	ldi	r20, 0x80	; 128
     794:	5f e3       	ldi	r21, 0x3F	; 63
     796:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__cmpsf2>
     79a:	88 23       	and	r24, r24
     79c:	2c f4       	brge	.+10     	; 0x7a8 <sendTagCommand+0x132>
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	9e 83       	std	Y+6, r25	; 0x06
     7a4:	8d 83       	std	Y+5, r24	; 0x05
     7a6:	3f c0       	rjmp	.+126    	; 0x826 <sendTagCommand+0x1b0>
     7a8:	6f 81       	ldd	r22, Y+7	; 0x07
     7aa:	78 85       	ldd	r23, Y+8	; 0x08
     7ac:	89 85       	ldd	r24, Y+9	; 0x09
     7ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	3f ef       	ldi	r19, 0xFF	; 255
     7b4:	4f e7       	ldi	r20, 0x7F	; 127
     7b6:	57 e4       	ldi	r21, 0x47	; 71
     7b8:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__gesf2>
     7bc:	18 16       	cp	r1, r24
     7be:	4c f5       	brge	.+82     	; 0x812 <sendTagCommand+0x19c>
     7c0:	6b 85       	ldd	r22, Y+11	; 0x0b
     7c2:	7c 85       	ldd	r23, Y+12	; 0x0c
     7c4:	8d 85       	ldd	r24, Y+13	; 0x0d
     7c6:	9e 85       	ldd	r25, Y+14	; 0x0e
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	40 e2       	ldi	r20, 0x20	; 32
     7ce:	51 e4       	ldi	r21, 0x41	; 65
     7d0:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__mulsf3>
     7d4:	dc 01       	movw	r26, r24
     7d6:	cb 01       	movw	r24, r22
     7d8:	bc 01       	movw	r22, r24
     7da:	cd 01       	movw	r24, r26
     7dc:	0e 94 5d 08 	call	0x10ba	; 0x10ba <__fixunssfsi>
     7e0:	dc 01       	movw	r26, r24
     7e2:	cb 01       	movw	r24, r22
     7e4:	9e 83       	std	Y+6, r25	; 0x06
     7e6:	8d 83       	std	Y+5, r24	; 0x05
     7e8:	0f c0       	rjmp	.+30     	; 0x808 <sendTagCommand+0x192>
     7ea:	89 e1       	ldi	r24, 0x19	; 25
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	9c 83       	std	Y+4, r25	; 0x04
     7f0:	8b 83       	std	Y+3, r24	; 0x03
     7f2:	8b 81       	ldd	r24, Y+3	; 0x03
     7f4:	9c 81       	ldd	r25, Y+4	; 0x04
     7f6:	01 97       	sbiw	r24, 0x01	; 1
     7f8:	f1 f7       	brne	.-4      	; 0x7f6 <sendTagCommand+0x180>
     7fa:	9c 83       	std	Y+4, r25	; 0x04
     7fc:	8b 83       	std	Y+3, r24	; 0x03
     7fe:	8d 81       	ldd	r24, Y+5	; 0x05
     800:	9e 81       	ldd	r25, Y+6	; 0x06
     802:	01 97       	sbiw	r24, 0x01	; 1
     804:	9e 83       	std	Y+6, r25	; 0x06
     806:	8d 83       	std	Y+5, r24	; 0x05
     808:	8d 81       	ldd	r24, Y+5	; 0x05
     80a:	9e 81       	ldd	r25, Y+6	; 0x06
     80c:	00 97       	sbiw	r24, 0x00	; 0
     80e:	69 f7       	brne	.-38     	; 0x7ea <sendTagCommand+0x174>
     810:	14 c0       	rjmp	.+40     	; 0x83a <sendTagCommand+0x1c4>
     812:	6f 81       	ldd	r22, Y+7	; 0x07
     814:	78 85       	ldd	r23, Y+8	; 0x08
     816:	89 85       	ldd	r24, Y+9	; 0x09
     818:	9a 85       	ldd	r25, Y+10	; 0x0a
     81a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <__fixunssfsi>
     81e:	dc 01       	movw	r26, r24
     820:	cb 01       	movw	r24, r22
     822:	9e 83       	std	Y+6, r25	; 0x06
     824:	8d 83       	std	Y+5, r24	; 0x05
     826:	8d 81       	ldd	r24, Y+5	; 0x05
     828:	9e 81       	ldd	r25, Y+6	; 0x06
     82a:	9a 83       	std	Y+2, r25	; 0x02
     82c:	89 83       	std	Y+1, r24	; 0x01
     82e:	89 81       	ldd	r24, Y+1	; 0x01
     830:	9a 81       	ldd	r25, Y+2	; 0x02
     832:	01 97       	sbiw	r24, 0x01	; 1
     834:	f1 f7       	brne	.-4      	; 0x832 <sendTagCommand+0x1bc>
     836:	9a 83       	std	Y+2, r25	; 0x02
     838:	89 83       	std	Y+1, r24	; 0x01
     83a:	84 e0       	ldi	r24, 0x04	; 4
     83c:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     840:	89 8b       	std	Y+17, r24	; 0x11
     842:	8f 85       	ldd	r24, Y+15	; 0x0f
     844:	98 89       	ldd	r25, Y+16	; 0x10
     846:	01 97       	sbiw	r24, 0x01	; 1
     848:	98 8b       	std	Y+16, r25	; 0x10
     84a:	8f 87       	std	Y+15, r24	; 0x0f
     84c:	8f 85       	ldd	r24, Y+15	; 0x0f
     84e:	98 89       	ldd	r25, Y+16	; 0x10
     850:	00 97       	sbiw	r24, 0x00	; 0
     852:	69 f0       	breq	.+26     	; 0x86e <sendTagCommand+0x1f8>
     854:	89 89       	ldd	r24, Y+17	; 0x11
     856:	88 2f       	mov	r24, r24
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	81 70       	andi	r24, 0x01	; 1
     85c:	90 70       	andi	r25, 0x00	; 0
     85e:	00 97       	sbiw	r24, 0x00	; 0
     860:	31 f4       	brne	.+12     	; 0x86e <sendTagCommand+0x1f8>
     862:	89 89       	ldd	r24, Y+17	; 0x11
     864:	9b 89       	ldd	r25, Y+19	; 0x13
     866:	89 23       	and	r24, r25
     868:	88 23       	and	r24, r24
     86a:	09 f4       	brne	.+2      	; 0x86e <sendTagCommand+0x1f8>
     86c:	74 cf       	rjmp	.-280    	; 0x756 <sendTagCommand+0xe0>
     86e:	8d e0       	ldi	r24, 0x0D	; 13
     870:	60 e8       	ldi	r22, 0x80	; 128
     872:	0e 94 1f 03 	call	0x63e	; 0x63e <clearRegBits>
     876:	8f 85       	ldd	r24, Y+15	; 0x0f
     878:	98 89       	ldd	r25, Y+16	; 0x10
     87a:	00 97       	sbiw	r24, 0x00	; 0
     87c:	09 f4       	brne	.+2      	; 0x880 <sendTagCommand+0x20a>
     87e:	76 c0       	rjmp	.+236    	; 0x96c <__stack+0x6d>
     880:	86 e0       	ldi	r24, 0x06	; 6
     882:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     886:	88 2f       	mov	r24, r24
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	8b 71       	andi	r24, 0x1B	; 27
     88c:	90 70       	andi	r25, 0x00	; 0
     88e:	00 97       	sbiw	r24, 0x00	; 0
     890:	09 f0       	breq	.+2      	; 0x894 <sendTagCommand+0x21e>
     892:	68 c0       	rjmp	.+208    	; 0x964 <__stack+0x65>
     894:	1e 8a       	std	Y+22, r1	; 0x16
     896:	1d 8a       	std	Y+21, r1	; 0x15
     898:	99 89       	ldd	r25, Y+17	; 0x11
     89a:	8c 89       	ldd	r24, Y+20	; 0x14
     89c:	89 23       	and	r24, r25
     89e:	88 2f       	mov	r24, r24
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	81 70       	andi	r24, 0x01	; 1
     8a4:	90 70       	andi	r25, 0x00	; 0
     8a6:	88 23       	and	r24, r24
     8a8:	21 f0       	breq	.+8      	; 0x8b2 <sendTagCommand+0x23c>
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	9e 8b       	std	Y+22, r25	; 0x16
     8b0:	8d 8b       	std	Y+21, r24	; 0x15
     8b2:	8f 89       	ldd	r24, Y+23	; 0x17
     8b4:	8c 30       	cpi	r24, 0x0C	; 12
     8b6:	09 f0       	breq	.+2      	; 0x8ba <sendTagCommand+0x244>
     8b8:	59 c0       	rjmp	.+178    	; 0x96c <__stack+0x6d>
     8ba:	8a e0       	ldi	r24, 0x0A	; 10
     8bc:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     8c0:	89 8b       	std	Y+17, r24	; 0x11
     8c2:	8c e0       	ldi	r24, 0x0C	; 12
     8c4:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     8c8:	87 70       	andi	r24, 0x07	; 7
     8ca:	8a 8b       	std	Y+18, r24	; 0x12
     8cc:	8a 89       	ldd	r24, Y+18	; 0x12
     8ce:	88 23       	and	r24, r24
     8d0:	a9 f0       	breq	.+42     	; 0x8fc <sendTagCommand+0x286>
     8d2:	89 89       	ldd	r24, Y+17	; 0x11
     8d4:	88 2f       	mov	r24, r24
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	9c 01       	movw	r18, r24
     8dc:	22 0f       	add	r18, r18
     8de:	33 1f       	adc	r19, r19
     8e0:	22 0f       	add	r18, r18
     8e2:	33 1f       	adc	r19, r19
     8e4:	22 0f       	add	r18, r18
     8e6:	33 1f       	adc	r19, r19
     8e8:	8a 89       	ldd	r24, Y+18	; 0x12
     8ea:	88 2f       	mov	r24, r24
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	82 0f       	add	r24, r18
     8f0:	93 1f       	adc	r25, r19
     8f2:	ee 8d       	ldd	r30, Y+30	; 0x1e
     8f4:	ff 8d       	ldd	r31, Y+31	; 0x1f
     8f6:	91 83       	std	Z+1, r25	; 0x01
     8f8:	80 83       	st	Z, r24
     8fa:	0d c0       	rjmp	.+26     	; 0x916 <__stack+0x17>
     8fc:	89 89       	ldd	r24, Y+17	; 0x11
     8fe:	88 2f       	mov	r24, r24
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	88 0f       	add	r24, r24
     904:	99 1f       	adc	r25, r25
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	88 0f       	add	r24, r24
     90c:	99 1f       	adc	r25, r25
     90e:	ee 8d       	ldd	r30, Y+30	; 0x1e
     910:	ff 8d       	ldd	r31, Y+31	; 0x1f
     912:	91 83       	std	Z+1, r25	; 0x01
     914:	80 83       	st	Z, r24
     916:	89 89       	ldd	r24, Y+17	; 0x11
     918:	88 23       	and	r24, r24
     91a:	11 f4       	brne	.+4      	; 0x920 <__stack+0x21>
     91c:	81 e0       	ldi	r24, 0x01	; 1
     91e:	89 8b       	std	Y+17, r24	; 0x11
     920:	89 89       	ldd	r24, Y+17	; 0x11
     922:	81 31       	cpi	r24, 0x11	; 17
     924:	10 f0       	brcs	.+4      	; 0x92a <__stack+0x2b>
     926:	80 e1       	ldi	r24, 0x10	; 16
     928:	89 8b       	std	Y+17, r24	; 0x11
     92a:	18 8a       	std	Y+16, r1	; 0x10
     92c:	1f 86       	std	Y+15, r1	; 0x0f
     92e:	11 c0       	rjmp	.+34     	; 0x952 <__stack+0x53>
     930:	2f 85       	ldd	r18, Y+15	; 0x0f
     932:	38 89       	ldd	r19, Y+16	; 0x10
     934:	8c 8d       	ldd	r24, Y+28	; 0x1c
     936:	9d 8d       	ldd	r25, Y+29	; 0x1d
     938:	8c 01       	movw	r16, r24
     93a:	02 0f       	add	r16, r18
     93c:	13 1f       	adc	r17, r19
     93e:	89 e0       	ldi	r24, 0x09	; 9
     940:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     944:	f8 01       	movw	r30, r16
     946:	80 83       	st	Z, r24
     948:	8f 85       	ldd	r24, Y+15	; 0x0f
     94a:	98 89       	ldd	r25, Y+16	; 0x10
     94c:	01 96       	adiw	r24, 0x01	; 1
     94e:	98 8b       	std	Y+16, r25	; 0x10
     950:	8f 87       	std	Y+15, r24	; 0x0f
     952:	89 89       	ldd	r24, Y+17	; 0x11
     954:	28 2f       	mov	r18, r24
     956:	30 e0       	ldi	r19, 0x00	; 0
     958:	8f 85       	ldd	r24, Y+15	; 0x0f
     95a:	98 89       	ldd	r25, Y+16	; 0x10
     95c:	82 17       	cp	r24, r18
     95e:	93 07       	cpc	r25, r19
     960:	3c f3       	brlt	.-50     	; 0x930 <__stack+0x31>
     962:	04 c0       	rjmp	.+8      	; 0x96c <__stack+0x6d>
     964:	82 e0       	ldi	r24, 0x02	; 2
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	9e 8b       	std	Y+22, r25	; 0x16
     96a:	8d 8b       	std	Y+21, r24	; 0x15
     96c:	8d 89       	ldd	r24, Y+21	; 0x15
     96e:	9e 89       	ldd	r25, Y+22	; 0x16
     970:	a1 96       	adiw	r28, 0x21	; 33
     972:	0f b6       	in	r0, 0x3f	; 63
     974:	f8 94       	cli
     976:	de bf       	out	0x3e, r29	; 62
     978:	0f be       	out	0x3f, r0	; 63
     97a:	cd bf       	out	0x3d, r28	; 61
     97c:	cf 91       	pop	r28
     97e:	df 91       	pop	r29
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	08 95       	ret

00000986 <scanForTag>:
     986:	0f 93       	push	r16
     988:	1f 93       	push	r17
     98a:	df 93       	push	r29
     98c:	cf 93       	push	r28
     98e:	cd b7       	in	r28, 0x3d	; 61
     990:	de b7       	in	r29, 0x3e	; 62
     992:	27 97       	sbiw	r28, 0x07	; 7
     994:	0f b6       	in	r0, 0x3f	; 63
     996:	f8 94       	cli
     998:	de bf       	out	0x3e, r29	; 62
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	cd bf       	out	0x3d, r28	; 61
     99e:	8d 83       	std	Y+5, r24	; 0x05
     9a0:	7f 83       	std	Y+7, r23	; 0x07
     9a2:	6e 83       	std	Y+6, r22	; 0x06
     9a4:	8d e0       	ldi	r24, 0x0D	; 13
     9a6:	67 e0       	ldi	r22, 0x07	; 7
     9a8:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     9ac:	ee 81       	ldd	r30, Y+6	; 0x06
     9ae:	ff 81       	ldd	r31, Y+7	; 0x07
     9b0:	8d 81       	ldd	r24, Y+5	; 0x05
     9b2:	80 83       	st	Z, r24
     9b4:	2e 81       	ldd	r18, Y+6	; 0x06
     9b6:	3f 81       	ldd	r19, Y+7	; 0x07
     9b8:	ee 81       	ldd	r30, Y+6	; 0x06
     9ba:	ff 81       	ldd	r31, Y+7	; 0x07
     9bc:	de 01       	movw	r26, r28
     9be:	13 96       	adiw	r26, 0x03	; 3
     9c0:	8c e0       	ldi	r24, 0x0C	; 12
     9c2:	b9 01       	movw	r22, r18
     9c4:	41 e0       	ldi	r20, 0x01	; 1
     9c6:	50 e0       	ldi	r21, 0x00	; 0
     9c8:	9f 01       	movw	r18, r30
     9ca:	8d 01       	movw	r16, r26
     9cc:	0e 94 3b 03 	call	0x676	; 0x676 <sendTagCommand>
     9d0:	9a 83       	std	Y+2, r25	; 0x02
     9d2:	89 83       	std	Y+1, r24	; 0x01
     9d4:	89 81       	ldd	r24, Y+1	; 0x01
     9d6:	9a 81       	ldd	r25, Y+2	; 0x02
     9d8:	00 97       	sbiw	r24, 0x00	; 0
     9da:	29 f4       	brne	.+10     	; 0x9e6 <scanForTag+0x60>
     9dc:	8b 81       	ldd	r24, Y+3	; 0x03
     9de:	9c 81       	ldd	r25, Y+4	; 0x04
     9e0:	80 31       	cpi	r24, 0x10	; 16
     9e2:	91 05       	cpc	r25, r1
     9e4:	21 f0       	breq	.+8      	; 0x9ee <scanForTag+0x68>
     9e6:	82 e0       	ldi	r24, 0x02	; 2
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	9a 83       	std	Y+2, r25	; 0x02
     9ec:	89 83       	std	Y+1, r24	; 0x01
     9ee:	89 81       	ldd	r24, Y+1	; 0x01
     9f0:	9a 81       	ldd	r25, Y+2	; 0x02
     9f2:	27 96       	adiw	r28, 0x07	; 7
     9f4:	0f b6       	in	r0, 0x3f	; 63
     9f6:	f8 94       	cli
     9f8:	de bf       	out	0x3e, r29	; 62
     9fa:	0f be       	out	0x3f, r0	; 63
     9fc:	cd bf       	out	0x3d, r28	; 61
     9fe:	cf 91       	pop	r28
     a00:	df 91       	pop	r29
     a02:	1f 91       	pop	r17
     a04:	0f 91       	pop	r16
     a06:	08 95       	ret

00000a08 <calculateCRC>:
     a08:	0f 93       	push	r16
     a0a:	1f 93       	push	r17
     a0c:	df 93       	push	r29
     a0e:	cf 93       	push	r28
     a10:	cd b7       	in	r28, 0x3d	; 61
     a12:	de b7       	in	r29, 0x3e	; 62
     a14:	29 97       	sbiw	r28, 0x09	; 9
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	f8 94       	cli
     a1a:	de bf       	out	0x3e, r29	; 62
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	cd bf       	out	0x3d, r28	; 61
     a20:	9d 83       	std	Y+5, r25	; 0x05
     a22:	8c 83       	std	Y+4, r24	; 0x04
     a24:	7f 83       	std	Y+7, r23	; 0x07
     a26:	6e 83       	std	Y+6, r22	; 0x06
     a28:	59 87       	std	Y+9, r21	; 0x09
     a2a:	48 87       	std	Y+8, r20	; 0x08
     a2c:	85 e0       	ldi	r24, 0x05	; 5
     a2e:	64 e0       	ldi	r22, 0x04	; 4
     a30:	0e 94 1f 03 	call	0x63e	; 0x63e <clearRegBits>
     a34:	8a e0       	ldi	r24, 0x0A	; 10
     a36:	60 e8       	ldi	r22, 0x80	; 128
     a38:	0e 94 05 03 	call	0x60a	; 0x60a <setRegBits>
     a3c:	1b 82       	std	Y+3, r1	; 0x03
     a3e:	1a 82       	std	Y+2, r1	; 0x02
     a40:	11 c0       	rjmp	.+34     	; 0xa64 <calculateCRC+0x5c>
     a42:	2a 81       	ldd	r18, Y+2	; 0x02
     a44:	3b 81       	ldd	r19, Y+3	; 0x03
     a46:	8c 81       	ldd	r24, Y+4	; 0x04
     a48:	9d 81       	ldd	r25, Y+5	; 0x05
     a4a:	fc 01       	movw	r30, r24
     a4c:	e2 0f       	add	r30, r18
     a4e:	f3 1f       	adc	r31, r19
     a50:	90 81       	ld	r25, Z
     a52:	89 e0       	ldi	r24, 0x09	; 9
     a54:	69 2f       	mov	r22, r25
     a56:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     a5a:	8a 81       	ldd	r24, Y+2	; 0x02
     a5c:	9b 81       	ldd	r25, Y+3	; 0x03
     a5e:	01 96       	adiw	r24, 0x01	; 1
     a60:	9b 83       	std	Y+3, r25	; 0x03
     a62:	8a 83       	std	Y+2, r24	; 0x02
     a64:	2a 81       	ldd	r18, Y+2	; 0x02
     a66:	3b 81       	ldd	r19, Y+3	; 0x03
     a68:	8e 81       	ldd	r24, Y+6	; 0x06
     a6a:	9f 81       	ldd	r25, Y+7	; 0x07
     a6c:	28 17       	cp	r18, r24
     a6e:	39 07       	cpc	r19, r25
     a70:	44 f3       	brlt	.-48     	; 0xa42 <calculateCRC+0x3a>
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	63 e0       	ldi	r22, 0x03	; 3
     a76:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     a7a:	8f ef       	ldi	r24, 0xFF	; 255
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	9b 83       	std	Y+3, r25	; 0x03
     a80:	8a 83       	std	Y+2, r24	; 0x02
     a82:	85 e0       	ldi	r24, 0x05	; 5
     a84:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     a88:	89 83       	std	Y+1, r24	; 0x01
     a8a:	8a 81       	ldd	r24, Y+2	; 0x02
     a8c:	9b 81       	ldd	r25, Y+3	; 0x03
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	9b 83       	std	Y+3, r25	; 0x03
     a92:	8a 83       	std	Y+2, r24	; 0x02
     a94:	8a 81       	ldd	r24, Y+2	; 0x02
     a96:	9b 81       	ldd	r25, Y+3	; 0x03
     a98:	00 97       	sbiw	r24, 0x00	; 0
     a9a:	39 f0       	breq	.+14     	; 0xaaa <calculateCRC+0xa2>
     a9c:	89 81       	ldd	r24, Y+1	; 0x01
     a9e:	88 2f       	mov	r24, r24
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	84 70       	andi	r24, 0x04	; 4
     aa4:	90 70       	andi	r25, 0x00	; 0
     aa6:	00 97       	sbiw	r24, 0x00	; 0
     aa8:	61 f3       	breq	.-40     	; 0xa82 <calculateCRC+0x7a>
     aaa:	82 e2       	ldi	r24, 0x22	; 34
     aac:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     ab0:	e8 85       	ldd	r30, Y+8	; 0x08
     ab2:	f9 85       	ldd	r31, Y+9	; 0x09
     ab4:	80 83       	st	Z, r24
     ab6:	88 85       	ldd	r24, Y+8	; 0x08
     ab8:	99 85       	ldd	r25, Y+9	; 0x09
     aba:	8c 01       	movw	r16, r24
     abc:	0f 5f       	subi	r16, 0xFF	; 255
     abe:	1f 4f       	sbci	r17, 0xFF	; 255
     ac0:	81 e2       	ldi	r24, 0x21	; 33
     ac2:	0e 94 c4 02 	call	0x588	; 0x588 <readFromReg>
     ac6:	f8 01       	movw	r30, r16
     ac8:	80 83       	st	Z, r24
     aca:	29 96       	adiw	r28, 0x09	; 9
     acc:	0f b6       	in	r0, 0x3f	; 63
     ace:	f8 94       	cli
     ad0:	de bf       	out	0x3e, r29	; 62
     ad2:	0f be       	out	0x3f, r0	; 63
     ad4:	cd bf       	out	0x3d, r28	; 61
     ad6:	cf 91       	pop	r28
     ad8:	df 91       	pop	r29
     ada:	1f 91       	pop	r17
     adc:	0f 91       	pop	r16
     ade:	08 95       	ret

00000ae0 <haltTag>:
     ae0:	0f 93       	push	r16
     ae2:	1f 93       	push	r17
     ae4:	df 93       	push	r29
     ae6:	cf 93       	push	r28
     ae8:	cd b7       	in	r28, 0x3d	; 61
     aea:	de b7       	in	r29, 0x3e	; 62
     aec:	28 97       	sbiw	r28, 0x08	; 8
     aee:	0f b6       	in	r0, 0x3f	; 63
     af0:	f8 94       	cli
     af2:	de bf       	out	0x3e, r29	; 62
     af4:	0f be       	out	0x3f, r0	; 63
     af6:	cd bf       	out	0x3d, r28	; 61
     af8:	80 e5       	ldi	r24, 0x50	; 80
     afa:	8d 83       	std	Y+5, r24	; 0x05
     afc:	1e 82       	std	Y+6, r1	; 0x06
     afe:	9e 01       	movw	r18, r28
     b00:	2b 5f       	subi	r18, 0xFB	; 251
     b02:	3f 4f       	sbci	r19, 0xFF	; 255
     b04:	ce 01       	movw	r24, r28
     b06:	05 96       	adiw	r24, 0x05	; 5
     b08:	ac 01       	movw	r20, r24
     b0a:	4e 5f       	subi	r20, 0xFE	; 254
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	c9 01       	movw	r24, r18
     b10:	62 e0       	ldi	r22, 0x02	; 2
     b12:	70 e0       	ldi	r23, 0x00	; 0
     b14:	0e 94 04 05 	call	0xa08	; 0xa08 <calculateCRC>
     b18:	88 e0       	ldi	r24, 0x08	; 8
     b1a:	68 e0       	ldi	r22, 0x08	; 8
     b1c:	0e 94 1f 03 	call	0x63e	; 0x63e <clearRegBits>
     b20:	9e 01       	movw	r18, r28
     b22:	2b 5f       	subi	r18, 0xFB	; 251
     b24:	3f 4f       	sbci	r19, 0xFF	; 255
     b26:	fe 01       	movw	r30, r28
     b28:	35 96       	adiw	r30, 0x05	; 5
     b2a:	de 01       	movw	r26, r28
     b2c:	13 96       	adiw	r26, 0x03	; 3
     b2e:	8c e0       	ldi	r24, 0x0C	; 12
     b30:	b9 01       	movw	r22, r18
     b32:	44 e0       	ldi	r20, 0x04	; 4
     b34:	50 e0       	ldi	r21, 0x00	; 0
     b36:	9f 01       	movw	r18, r30
     b38:	8d 01       	movw	r16, r26
     b3a:	0e 94 3b 03 	call	0x676	; 0x676 <sendTagCommand>
     b3e:	9a 83       	std	Y+2, r25	; 0x02
     b40:	89 83       	std	Y+1, r24	; 0x01
     b42:	89 81       	ldd	r24, Y+1	; 0x01
     b44:	9a 81       	ldd	r25, Y+2	; 0x02
     b46:	28 96       	adiw	r28, 0x08	; 8
     b48:	0f b6       	in	r0, 0x3f	; 63
     b4a:	f8 94       	cli
     b4c:	de bf       	out	0x3e, r29	; 62
     b4e:	0f be       	out	0x3f, r0	; 63
     b50:	cd bf       	out	0x3d, r28	; 61
     b52:	cf 91       	pop	r28
     b54:	df 91       	pop	r29
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	08 95       	ret

00000b5c <antiCollision>:
     b5c:	0f 93       	push	r16
     b5e:	1f 93       	push	r17
     b60:	df 93       	push	r29
     b62:	cf 93       	push	r28
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	29 97       	sbiw	r28, 0x09	; 9
     b6a:	0f b6       	in	r0, 0x3f	; 63
     b6c:	f8 94       	cli
     b6e:	de bf       	out	0x3e, r29	; 62
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	cd bf       	out	0x3d, r28	; 61
     b74:	99 87       	std	Y+9, r25	; 0x09
     b76:	88 87       	std	Y+8, r24	; 0x08
     b78:	19 82       	std	Y+1, r1	; 0x01
     b7a:	8d e0       	ldi	r24, 0x0D	; 13
     b7c:	60 e0       	ldi	r22, 0x00	; 0
     b7e:	0e 94 9f 02 	call	0x53e	; 0x53e <writeToReg>
     b82:	e8 85       	ldd	r30, Y+8	; 0x08
     b84:	f9 85       	ldd	r31, Y+9	; 0x09
     b86:	83 e9       	ldi	r24, 0x93	; 147
     b88:	80 83       	st	Z, r24
     b8a:	88 85       	ldd	r24, Y+8	; 0x08
     b8c:	99 85       	ldd	r25, Y+9	; 0x09
     b8e:	fc 01       	movw	r30, r24
     b90:	31 96       	adiw	r30, 0x01	; 1
     b92:	80 e2       	ldi	r24, 0x20	; 32
     b94:	80 83       	st	Z, r24
     b96:	de 01       	movw	r26, r28
     b98:	16 96       	adiw	r26, 0x06	; 6
     b9a:	28 85       	ldd	r18, Y+8	; 0x08
     b9c:	39 85       	ldd	r19, Y+9	; 0x09
     b9e:	e8 85       	ldd	r30, Y+8	; 0x08
     ba0:	f9 85       	ldd	r31, Y+9	; 0x09
     ba2:	8c e0       	ldi	r24, 0x0C	; 12
     ba4:	b9 01       	movw	r22, r18
     ba6:	42 e0       	ldi	r20, 0x02	; 2
     ba8:	50 e0       	ldi	r21, 0x00	; 0
     baa:	9f 01       	movw	r18, r30
     bac:	8d 01       	movw	r16, r26
     bae:	0e 94 3b 03 	call	0x676	; 0x676 <sendTagCommand>
     bb2:	9d 83       	std	Y+5, r25	; 0x05
     bb4:	8c 83       	std	Y+4, r24	; 0x04
     bb6:	8e 81       	ldd	r24, Y+6	; 0x06
     bb8:	9f 81       	ldd	r25, Y+7	; 0x07
     bba:	96 95       	lsr	r25
     bbc:	87 95       	ror	r24
     bbe:	96 95       	lsr	r25
     bc0:	87 95       	ror	r24
     bc2:	96 95       	lsr	r25
     bc4:	87 95       	ror	r24
     bc6:	9f 83       	std	Y+7, r25	; 0x07
     bc8:	8e 83       	std	Y+6, r24	; 0x06
     bca:	8c 81       	ldd	r24, Y+4	; 0x04
     bcc:	9d 81       	ldd	r25, Y+5	; 0x05
     bce:	00 97       	sbiw	r24, 0x00	; 0
     bd0:	61 f5       	brne	.+88     	; 0xc2a <antiCollision+0xce>
     bd2:	1b 82       	std	Y+3, r1	; 0x03
     bd4:	1a 82       	std	Y+2, r1	; 0x02
     bd6:	10 c0       	rjmp	.+32     	; 0xbf8 <antiCollision+0x9c>
     bd8:	28 85       	ldd	r18, Y+8	; 0x08
     bda:	39 85       	ldd	r19, Y+9	; 0x09
     bdc:	8a 81       	ldd	r24, Y+2	; 0x02
     bde:	9b 81       	ldd	r25, Y+3	; 0x03
     be0:	f9 01       	movw	r30, r18
     be2:	e8 0f       	add	r30, r24
     be4:	f9 1f       	adc	r31, r25
     be6:	90 81       	ld	r25, Z
     be8:	89 81       	ldd	r24, Y+1	; 0x01
     bea:	89 27       	eor	r24, r25
     bec:	89 83       	std	Y+1, r24	; 0x01
     bee:	8a 81       	ldd	r24, Y+2	; 0x02
     bf0:	9b 81       	ldd	r25, Y+3	; 0x03
     bf2:	01 96       	adiw	r24, 0x01	; 1
     bf4:	9b 83       	std	Y+3, r25	; 0x03
     bf6:	8a 83       	std	Y+2, r24	; 0x02
     bf8:	8e 81       	ldd	r24, Y+6	; 0x06
     bfa:	9f 81       	ldd	r25, Y+7	; 0x07
     bfc:	9c 01       	movw	r18, r24
     bfe:	21 50       	subi	r18, 0x01	; 1
     c00:	30 40       	sbci	r19, 0x00	; 0
     c02:	8a 81       	ldd	r24, Y+2	; 0x02
     c04:	9b 81       	ldd	r25, Y+3	; 0x03
     c06:	82 17       	cp	r24, r18
     c08:	93 07       	cpc	r25, r19
     c0a:	30 f3       	brcs	.-52     	; 0xbd8 <antiCollision+0x7c>
     c0c:	28 85       	ldd	r18, Y+8	; 0x08
     c0e:	39 85       	ldd	r19, Y+9	; 0x09
     c10:	8a 81       	ldd	r24, Y+2	; 0x02
     c12:	9b 81       	ldd	r25, Y+3	; 0x03
     c14:	f9 01       	movw	r30, r18
     c16:	e8 0f       	add	r30, r24
     c18:	f9 1f       	adc	r31, r25
     c1a:	90 81       	ld	r25, Z
     c1c:	89 81       	ldd	r24, Y+1	; 0x01
     c1e:	98 17       	cp	r25, r24
     c20:	21 f0       	breq	.+8      	; 0xc2a <antiCollision+0xce>
     c22:	82 e0       	ldi	r24, 0x02	; 2
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	9d 83       	std	Y+5, r25	; 0x05
     c28:	8c 83       	std	Y+4, r24	; 0x04
     c2a:	8c 81       	ldd	r24, Y+4	; 0x04
     c2c:	9d 81       	ldd	r25, Y+5	; 0x05
     c2e:	29 96       	adiw	r28, 0x09	; 9
     c30:	0f b6       	in	r0, 0x3f	; 63
     c32:	f8 94       	cli
     c34:	de bf       	out	0x3e, r29	; 62
     c36:	0f be       	out	0x3f, r0	; 63
     c38:	cd bf       	out	0x3d, r28	; 61
     c3a:	cf 91       	pop	r28
     c3c:	df 91       	pop	r29
     c3e:	1f 91       	pop	r17
     c40:	0f 91       	pop	r16
     c42:	08 95       	ret

00000c44 <dumpSerial>:
     c44:	df 93       	push	r29
     c46:	cf 93       	push	r28
     c48:	cd b7       	in	r28, 0x3d	; 61
     c4a:	de b7       	in	r29, 0x3e	; 62
     c4c:	2e 97       	sbiw	r28, 0x0e	; 14
     c4e:	0f b6       	in	r0, 0x3f	; 63
     c50:	f8 94       	cli
     c52:	de bf       	out	0x3e, r29	; 62
     c54:	0f be       	out	0x3f, r0	; 63
     c56:	cd bf       	out	0x3d, r28	; 61
     c58:	9d 83       	std	Y+5, r25	; 0x05
     c5a:	8c 83       	std	Y+4, r24	; 0x04
     c5c:	6e 83       	std	Y+6, r22	; 0x06
     c5e:	58 87       	std	Y+8, r21	; 0x08
     c60:	4f 83       	std	Y+7, r20	; 0x07
     c62:	2d b7       	in	r18, 0x3d	; 61
     c64:	3e b7       	in	r19, 0x3e	; 62
     c66:	3e 87       	std	Y+14, r19	; 0x0e
     c68:	2d 87       	std	Y+13, r18	; 0x0d
     c6a:	8d b7       	in	r24, 0x3d	; 61
     c6c:	9e b7       	in	r25, 0x3e	; 62
     c6e:	9a 87       	std	Y+10, r25	; 0x0a
     c70:	89 87       	std	Y+9, r24	; 0x09
     c72:	8e 81       	ldd	r24, Y+6	; 0x06
     c74:	88 2f       	mov	r24, r24
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	01 96       	adiw	r24, 0x01	; 1
     c7a:	2d b7       	in	r18, 0x3d	; 61
     c7c:	3e b7       	in	r19, 0x3e	; 62
     c7e:	28 1b       	sub	r18, r24
     c80:	39 0b       	sbc	r19, r25
     c82:	0f b6       	in	r0, 0x3f	; 63
     c84:	f8 94       	cli
     c86:	3e bf       	out	0x3e, r19	; 62
     c88:	0f be       	out	0x3f, r0	; 63
     c8a:	2d bf       	out	0x3d, r18	; 61
     c8c:	8d b7       	in	r24, 0x3d	; 61
     c8e:	9e b7       	in	r25, 0x3e	; 62
     c90:	01 96       	adiw	r24, 0x01	; 1
     c92:	9c 87       	std	Y+12, r25	; 0x0c
     c94:	8b 87       	std	Y+11, r24	; 0x0b
     c96:	8b 85       	ldd	r24, Y+11	; 0x0b
     c98:	9c 85       	ldd	r25, Y+12	; 0x0c
     c9a:	00 96       	adiw	r24, 0x00	; 0
     c9c:	9c 87       	std	Y+12, r25	; 0x0c
     c9e:	8b 87       	std	Y+11, r24	; 0x0b
     ca0:	2b 85       	ldd	r18, Y+11	; 0x0b
     ca2:	3c 85       	ldd	r19, Y+12	; 0x0c
     ca4:	3b 83       	std	Y+3, r19	; 0x03
     ca6:	2a 83       	std	Y+2, r18	; 0x02
     ca8:	19 82       	std	Y+1, r1	; 0x01
     caa:	32 c0       	rjmp	.+100    	; 0xd10 <dumpSerial+0xcc>
     cac:	4f 81       	ldd	r20, Y+7	; 0x07
     cae:	58 85       	ldd	r21, Y+8	; 0x08
     cb0:	89 81       	ldd	r24, Y+1	; 0x01
     cb2:	28 2f       	mov	r18, r24
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	c9 01       	movw	r24, r18
     cb8:	88 0f       	add	r24, r24
     cba:	99 1f       	adc	r25, r25
     cbc:	82 0f       	add	r24, r18
     cbe:	93 1f       	adc	r25, r19
     cc0:	48 0f       	add	r20, r24
     cc2:	59 1f       	adc	r21, r25
     cc4:	89 81       	ldd	r24, Y+1	; 0x01
     cc6:	28 2f       	mov	r18, r24
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	8c 81       	ldd	r24, Y+4	; 0x04
     ccc:	9d 81       	ldd	r25, Y+5	; 0x05
     cce:	fc 01       	movw	r30, r24
     cd0:	e2 0f       	add	r30, r18
     cd2:	f3 1f       	adc	r31, r19
     cd4:	80 81       	ld	r24, Z
     cd6:	28 2f       	mov	r18, r24
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	00 d0       	rcall	.+0      	; 0xcdc <dumpSerial+0x98>
     cdc:	00 d0       	rcall	.+0      	; 0xcde <dumpSerial+0x9a>
     cde:	00 d0       	rcall	.+0      	; 0xce0 <dumpSerial+0x9c>
     ce0:	ed b7       	in	r30, 0x3d	; 61
     ce2:	fe b7       	in	r31, 0x3e	; 62
     ce4:	31 96       	adiw	r30, 0x01	; 1
     ce6:	51 83       	std	Z+1, r21	; 0x01
     ce8:	40 83       	st	Z, r20
     cea:	83 ed       	ldi	r24, 0xD3	; 211
     cec:	91 e0       	ldi	r25, 0x01	; 1
     cee:	93 83       	std	Z+3, r25	; 0x03
     cf0:	82 83       	std	Z+2, r24	; 0x02
     cf2:	35 83       	std	Z+5, r19	; 0x05
     cf4:	24 83       	std	Z+4, r18	; 0x04
     cf6:	0e 94 90 09 	call	0x1320	; 0x1320 <sprintf>
     cfa:	8d b7       	in	r24, 0x3d	; 61
     cfc:	9e b7       	in	r25, 0x3e	; 62
     cfe:	06 96       	adiw	r24, 0x06	; 6
     d00:	0f b6       	in	r0, 0x3f	; 63
     d02:	f8 94       	cli
     d04:	9e bf       	out	0x3e, r25	; 62
     d06:	0f be       	out	0x3f, r0	; 63
     d08:	8d bf       	out	0x3d, r24	; 61
     d0a:	89 81       	ldd	r24, Y+1	; 0x01
     d0c:	8f 5f       	subi	r24, 0xFF	; 255
     d0e:	89 83       	std	Y+1, r24	; 0x01
     d10:	99 81       	ldd	r25, Y+1	; 0x01
     d12:	8e 81       	ldd	r24, Y+6	; 0x06
     d14:	98 17       	cp	r25, r24
     d16:	50 f2       	brcs	.-108    	; 0xcac <dumpSerial+0x68>
     d18:	89 81       	ldd	r24, Y+1	; 0x01
     d1a:	28 2f       	mov	r18, r24
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	c9 01       	movw	r24, r18
     d20:	88 0f       	add	r24, r24
     d22:	99 1f       	adc	r25, r25
     d24:	82 0f       	add	r24, r18
     d26:	93 1f       	adc	r25, r19
     d28:	81 50       	subi	r24, 0x01	; 1
     d2a:	89 83       	std	Y+1, r24	; 0x01
     d2c:	89 81       	ldd	r24, Y+1	; 0x01
     d2e:	28 2f       	mov	r18, r24
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	8f 81       	ldd	r24, Y+7	; 0x07
     d34:	98 85       	ldd	r25, Y+8	; 0x08
     d36:	fc 01       	movw	r30, r24
     d38:	e2 0f       	add	r30, r18
     d3a:	f3 1f       	adc	r31, r19
     d3c:	10 82       	st	Z, r1
     d3e:	29 85       	ldd	r18, Y+9	; 0x09
     d40:	3a 85       	ldd	r19, Y+10	; 0x0a
     d42:	0f b6       	in	r0, 0x3f	; 63
     d44:	f8 94       	cli
     d46:	3e bf       	out	0x3e, r19	; 62
     d48:	0f be       	out	0x3f, r0	; 63
     d4a:	2d bf       	out	0x3d, r18	; 61
     d4c:	8d 85       	ldd	r24, Y+13	; 0x0d
     d4e:	9e 85       	ldd	r25, Y+14	; 0x0e
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	f8 94       	cli
     d54:	9e bf       	out	0x3e, r25	; 62
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	8d bf       	out	0x3d, r24	; 61
     d5a:	2e 96       	adiw	r28, 0x0e	; 14
     d5c:	0f b6       	in	r0, 0x3f	; 63
     d5e:	f8 94       	cli
     d60:	de bf       	out	0x3e, r29	; 62
     d62:	0f be       	out	0x3f, r0	; 63
     d64:	cd bf       	out	0x3d, r28	; 61
     d66:	cf 91       	pop	r28
     d68:	df 91       	pop	r29
     d6a:	08 95       	ret

00000d6c <initSpiMaster>:
     d6c:	df 93       	push	r29
     d6e:	cf 93       	push	r28
     d70:	cd b7       	in	r28, 0x3d	; 61
     d72:	de b7       	in	r29, 0x3e	; 62
     d74:	a4 e2       	ldi	r26, 0x24	; 36
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	e4 e2       	ldi	r30, 0x24	; 36
     d7a:	f0 e0       	ldi	r31, 0x00	; 0
     d7c:	80 81       	ld	r24, Z
     d7e:	84 60       	ori	r24, 0x04	; 4
     d80:	8c 93       	st	X, r24
     d82:	ec e4       	ldi	r30, 0x4C	; 76
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 e1       	ldi	r24, 0x10	; 16
     d88:	80 83       	st	Z, r24
     d8a:	ac e4       	ldi	r26, 0x4C	; 76
     d8c:	b0 e0       	ldi	r27, 0x00	; 0
     d8e:	ec e4       	ldi	r30, 0x4C	; 76
     d90:	f0 e0       	ldi	r31, 0x00	; 0
     d92:	80 81       	ld	r24, Z
     d94:	80 64       	ori	r24, 0x40	; 64
     d96:	8c 93       	st	X, r24
     d98:	a4 e2       	ldi	r26, 0x24	; 36
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	e4 e2       	ldi	r30, 0x24	; 36
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	80 81       	ld	r24, Z
     da2:	8c 62       	ori	r24, 0x2C	; 44
     da4:	8c 93       	st	X, r24
     da6:	cf 91       	pop	r28
     da8:	df 91       	pop	r29
     daa:	08 95       	ret

00000dac <tranceiveSpi>:
     dac:	df 93       	push	r29
     dae:	cf 93       	push	r28
     db0:	0f 92       	push	r0
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	89 83       	std	Y+1, r24	; 0x01
     db8:	ee e4       	ldi	r30, 0x4E	; 78
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	80 83       	st	Z, r24
     dc0:	00 00       	nop
     dc2:	ed e4       	ldi	r30, 0x4D	; 77
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	88 23       	and	r24, r24
     dca:	dc f7       	brge	.-10     	; 0xdc2 <tranceiveSpi+0x16>
     dcc:	ee e4       	ldi	r30, 0x4E	; 78
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	0f 90       	pop	r0
     dd4:	cf 91       	pop	r28
     dd6:	df 91       	pop	r29
     dd8:	08 95       	ret

00000dda <initUsart0>:
     dda:	df 93       	push	r29
     ddc:	cf 93       	push	r28
     dde:	00 d0       	rcall	.+0      	; 0xde0 <initUsart0+0x6>
     de0:	00 d0       	rcall	.+0      	; 0xde2 <initUsart0+0x8>
     de2:	cd b7       	in	r28, 0x3d	; 61
     de4:	de b7       	in	r29, 0x3e	; 62
     de6:	9c 83       	std	Y+4, r25	; 0x04
     de8:	8b 83       	std	Y+3, r24	; 0x03
     dea:	8b 81       	ldd	r24, Y+3	; 0x03
     dec:	9c 81       	ldd	r25, Y+4	; 0x04
     dee:	cc 01       	movw	r24, r24
     df0:	a0 e0       	ldi	r26, 0x00	; 0
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	88 0f       	add	r24, r24
     df6:	99 1f       	adc	r25, r25
     df8:	aa 1f       	adc	r26, r26
     dfa:	bb 1f       	adc	r27, r27
     dfc:	88 0f       	add	r24, r24
     dfe:	99 1f       	adc	r25, r25
     e00:	aa 1f       	adc	r26, r26
     e02:	bb 1f       	adc	r27, r27
     e04:	88 0f       	add	r24, r24
     e06:	99 1f       	adc	r25, r25
     e08:	aa 1f       	adc	r26, r26
     e0a:	bb 1f       	adc	r27, r27
     e0c:	88 0f       	add	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	aa 1f       	adc	r26, r26
     e12:	bb 1f       	adc	r27, r27
     e14:	9c 01       	movw	r18, r24
     e16:	ad 01       	movw	r20, r26
     e18:	80 e0       	ldi	r24, 0x00	; 0
     e1a:	92 e1       	ldi	r25, 0x12	; 18
     e1c:	aa e7       	ldi	r26, 0x7A	; 122
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	bc 01       	movw	r22, r24
     e22:	cd 01       	movw	r24, r26
     e24:	0e 94 65 09 	call	0x12ca	; 0x12ca <__udivmodsi4>
     e28:	da 01       	movw	r26, r20
     e2a:	c9 01       	movw	r24, r18
     e2c:	01 97       	sbiw	r24, 0x01	; 1
     e2e:	9a 83       	std	Y+2, r25	; 0x02
     e30:	89 83       	std	Y+1, r24	; 0x01
     e32:	e5 ec       	ldi	r30, 0xC5	; 197
     e34:	f0 e0       	ldi	r31, 0x00	; 0
     e36:	89 81       	ldd	r24, Y+1	; 0x01
     e38:	9a 81       	ldd	r25, Y+2	; 0x02
     e3a:	89 2f       	mov	r24, r25
     e3c:	99 27       	eor	r25, r25
     e3e:	80 83       	st	Z, r24
     e40:	e4 ec       	ldi	r30, 0xC4	; 196
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	80 83       	st	Z, r24
     e48:	e2 ec       	ldi	r30, 0xC2	; 194
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	86 e0       	ldi	r24, 0x06	; 6
     e4e:	80 83       	st	Z, r24
     e50:	a1 ec       	ldi	r26, 0xC1	; 193
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	e1 ec       	ldi	r30, 0xC1	; 193
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	80 81       	ld	r24, Z
     e5a:	80 68       	ori	r24, 0x80	; 128
     e5c:	8c 93       	st	X, r24
     e5e:	a1 ec       	ldi	r26, 0xC1	; 193
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	e1 ec       	ldi	r30, 0xC1	; 193
     e64:	f0 e0       	ldi	r31, 0x00	; 0
     e66:	80 81       	ld	r24, Z
     e68:	88 61       	ori	r24, 0x18	; 24
     e6a:	8c 93       	st	X, r24
     e6c:	0f 90       	pop	r0
     e6e:	0f 90       	pop	r0
     e70:	0f 90       	pop	r0
     e72:	0f 90       	pop	r0
     e74:	cf 91       	pop	r28
     e76:	df 91       	pop	r29
     e78:	08 95       	ret

00000e7a <putcUsart0>:
     e7a:	df 93       	push	r29
     e7c:	cf 93       	push	r28
     e7e:	0f 92       	push	r0
     e80:	cd b7       	in	r28, 0x3d	; 61
     e82:	de b7       	in	r29, 0x3e	; 62
     e84:	89 83       	std	Y+1, r24	; 0x01
     e86:	e0 ec       	ldi	r30, 0xC0	; 192
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	80 81       	ld	r24, Z
     e8c:	88 2f       	mov	r24, r24
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	80 72       	andi	r24, 0x20	; 32
     e92:	90 70       	andi	r25, 0x00	; 0
     e94:	00 97       	sbiw	r24, 0x00	; 0
     e96:	b9 f3       	breq	.-18     	; 0xe86 <putcUsart0+0xc>
     e98:	e6 ec       	ldi	r30, 0xC6	; 198
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	89 81       	ldd	r24, Y+1	; 0x01
     e9e:	80 83       	st	Z, r24
     ea0:	0f 90       	pop	r0
     ea2:	cf 91       	pop	r28
     ea4:	df 91       	pop	r29
     ea6:	08 95       	ret

00000ea8 <putsUsart0>:
     ea8:	df 93       	push	r29
     eaa:	cf 93       	push	r28
     eac:	00 d0       	rcall	.+0      	; 0xeae <putsUsart0+0x6>
     eae:	00 d0       	rcall	.+0      	; 0xeb0 <putsUsart0+0x8>
     eb0:	cd b7       	in	r28, 0x3d	; 61
     eb2:	de b7       	in	r29, 0x3e	; 62
     eb4:	9c 83       	std	Y+4, r25	; 0x04
     eb6:	8b 83       	std	Y+3, r24	; 0x03
     eb8:	1a 82       	std	Y+2, r1	; 0x02
     eba:	19 82       	std	Y+1, r1	; 0x01
     ebc:	0f c0       	rjmp	.+30     	; 0xedc <putsUsart0+0x34>
     ebe:	29 81       	ldd	r18, Y+1	; 0x01
     ec0:	3a 81       	ldd	r19, Y+2	; 0x02
     ec2:	8b 81       	ldd	r24, Y+3	; 0x03
     ec4:	9c 81       	ldd	r25, Y+4	; 0x04
     ec6:	fc 01       	movw	r30, r24
     ec8:	e2 0f       	add	r30, r18
     eca:	f3 1f       	adc	r31, r19
     ecc:	80 81       	ld	r24, Z
     ece:	0e 94 3d 07 	call	0xe7a	; 0xe7a <putcUsart0>
     ed2:	89 81       	ldd	r24, Y+1	; 0x01
     ed4:	9a 81       	ldd	r25, Y+2	; 0x02
     ed6:	01 96       	adiw	r24, 0x01	; 1
     ed8:	9a 83       	std	Y+2, r25	; 0x02
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	29 81       	ldd	r18, Y+1	; 0x01
     ede:	3a 81       	ldd	r19, Y+2	; 0x02
     ee0:	8b 81       	ldd	r24, Y+3	; 0x03
     ee2:	9c 81       	ldd	r25, Y+4	; 0x04
     ee4:	fc 01       	movw	r30, r24
     ee6:	e2 0f       	add	r30, r18
     ee8:	f3 1f       	adc	r31, r19
     eea:	80 81       	ld	r24, Z
     eec:	88 23       	and	r24, r24
     eee:	39 f7       	brne	.-50     	; 0xebe <putsUsart0+0x16>
     ef0:	0f 90       	pop	r0
     ef2:	0f 90       	pop	r0
     ef4:	0f 90       	pop	r0
     ef6:	0f 90       	pop	r0
     ef8:	cf 91       	pop	r28
     efa:	df 91       	pop	r29
     efc:	08 95       	ret

00000efe <__vector_14>:
     efe:	1f 92       	push	r1
     f00:	0f 92       	push	r0
     f02:	0f b6       	in	r0, 0x3f	; 63
     f04:	0f 92       	push	r0
     f06:	11 24       	eor	r1, r1
     f08:	2f 93       	push	r18
     f0a:	3f 93       	push	r19
     f0c:	8f 93       	push	r24
     f0e:	9f 93       	push	r25
     f10:	af 93       	push	r26
     f12:	bf 93       	push	r27
     f14:	ef 93       	push	r30
     f16:	ff 93       	push	r31
     f18:	df 93       	push	r29
     f1a:	cf 93       	push	r28
     f1c:	00 d0       	rcall	.+0      	; 0xf1e <__vector_14+0x20>
     f1e:	0f 92       	push	r0
     f20:	cd b7       	in	r28, 0x3d	; 61
     f22:	de b7       	in	r29, 0x3e	; 62
     f24:	80 91 04 02 	lds	r24, 0x0204
     f28:	81 30       	cpi	r24, 0x01	; 1
     f2a:	d1 f5       	brne	.+116    	; 0xfa0 <__vector_14+0xa2>
     f2c:	80 91 05 02 	lds	r24, 0x0205
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	89 81       	ldd	r24, Y+1	; 0x01
     f34:	81 50       	subi	r24, 0x01	; 1
     f36:	89 83       	std	Y+1, r24	; 0x01
     f38:	89 81       	ldd	r24, Y+1	; 0x01
     f3a:	88 23       	and	r24, r24
     f3c:	71 f5       	brne	.+92     	; 0xf9a <__vector_14+0x9c>
     f3e:	80 91 07 02 	lds	r24, 0x0207
     f42:	90 91 08 02 	lds	r25, 0x0208
     f46:	81 70       	andi	r24, 0x01	; 1
     f48:	90 70       	andi	r25, 0x00	; 0
     f4a:	88 23       	and	r24, r24
     f4c:	41 f0       	breq	.+16     	; 0xf5e <__vector_14+0x60>
     f4e:	a8 e2       	ldi	r26, 0x28	; 40
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	e8 e2       	ldi	r30, 0x28	; 40
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	82 60       	ori	r24, 0x02	; 2
     f5a:	8c 93       	st	X, r24
     f5c:	07 c0       	rjmp	.+14     	; 0xf6c <__vector_14+0x6e>
     f5e:	a8 e2       	ldi	r26, 0x28	; 40
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e8 e2       	ldi	r30, 0x28	; 40
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	8d 7f       	andi	r24, 0xFD	; 253
     f6a:	8c 93       	st	X, r24
     f6c:	80 91 07 02 	lds	r24, 0x0207
     f70:	90 91 08 02 	lds	r25, 0x0208
     f74:	96 95       	lsr	r25
     f76:	87 95       	ror	r24
     f78:	90 93 08 02 	sts	0x0208, r25
     f7c:	80 93 07 02 	sts	0x0207, r24
     f80:	83 e0       	ldi	r24, 0x03	; 3
     f82:	89 83       	std	Y+1, r24	; 0x01
     f84:	80 91 06 02 	lds	r24, 0x0206
     f88:	81 50       	subi	r24, 0x01	; 1
     f8a:	80 93 06 02 	sts	0x0206, r24
     f8e:	80 91 06 02 	lds	r24, 0x0206
     f92:	88 23       	and	r24, r24
     f94:	11 f4       	brne	.+4      	; 0xf9a <__vector_14+0x9c>
     f96:	10 92 04 02 	sts	0x0204, r1
     f9a:	89 81       	ldd	r24, Y+1	; 0x01
     f9c:	80 93 05 02 	sts	0x0205, r24
     fa0:	80 91 02 02 	lds	r24, 0x0202
     fa4:	88 23       	and	r24, r24
     fa6:	09 f0       	breq	.+2      	; 0xfaa <__vector_14+0xac>
     fa8:	72 c0       	rjmp	.+228    	; 0x108e <__vector_14+0x190>
     faa:	80 91 e0 01 	lds	r24, 0x01E0
     fae:	88 23       	and	r24, r24
     fb0:	29 f1       	breq	.+74     	; 0xffc <__vector_14+0xfe>
     fb2:	80 91 de 01 	lds	r24, 0x01DE
     fb6:	81 50       	subi	r24, 0x01	; 1
     fb8:	80 93 de 01 	sts	0x01DE, r24
     fbc:	80 91 de 01 	lds	r24, 0x01DE
     fc0:	88 23       	and	r24, r24
     fc2:	09 f0       	breq	.+2      	; 0xfc6 <__vector_14+0xc8>
     fc4:	64 c0       	rjmp	.+200    	; 0x108e <__vector_14+0x190>
     fc6:	10 92 e0 01 	sts	0x01E0, r1
     fca:	10 92 03 02 	sts	0x0203, r1
     fce:	80 91 01 02 	lds	r24, 0x0201
     fd2:	28 2f       	mov	r18, r24
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	80 91 dc 01 	lds	r24, 0x01DC
     fda:	f9 01       	movw	r30, r18
     fdc:	ef 51       	subi	r30, 0x1F	; 31
     fde:	fe 4f       	sbci	r31, 0xFE	; 254
     fe0:	80 83       	st	Z, r24
     fe2:	80 91 01 02 	lds	r24, 0x0201
     fe6:	8f 5f       	subi	r24, 0xFF	; 255
     fe8:	80 93 01 02 	sts	0x0201, r24
     fec:	80 91 01 02 	lds	r24, 0x0201
     ff0:	80 32       	cpi	r24, 0x20	; 32
     ff2:	08 f4       	brcc	.+2      	; 0xff6 <__vector_14+0xf8>
     ff4:	4c c0       	rjmp	.+152    	; 0x108e <__vector_14+0x190>
     ff6:	10 92 01 02 	sts	0x0201, r1
     ffa:	49 c0       	rjmp	.+146    	; 0x108e <__vector_14+0x190>
     ffc:	80 91 03 02 	lds	r24, 0x0203
    1000:	88 23       	and	r24, r24
    1002:	b9 f4       	brne	.+46     	; 0x1032 <__vector_14+0x134>
    1004:	e6 e2       	ldi	r30, 0x26	; 38
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	81 70       	andi	r24, 0x01	; 1
    100c:	8b 83       	std	Y+3, r24	; 0x03
    100e:	8b 81       	ldd	r24, Y+3	; 0x03
    1010:	88 23       	and	r24, r24
    1012:	e9 f5       	brne	.+122    	; 0x108e <__vector_14+0x190>
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	80 93 03 02 	sts	0x0203, r24
    101a:	10 92 dc 01 	sts	0x01DC, r1
    101e:	84 e0       	ldi	r24, 0x04	; 4
    1020:	80 93 de 01 	sts	0x01DE, r24
    1024:	88 e0       	ldi	r24, 0x08	; 8
    1026:	80 93 dd 01 	sts	0x01DD, r24
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	80 93 df 01 	sts	0x01DF, r24
    1030:	2e c0       	rjmp	.+92     	; 0x108e <__vector_14+0x190>
    1032:	80 91 de 01 	lds	r24, 0x01DE
    1036:	89 83       	std	Y+1, r24	; 0x01
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	81 50       	subi	r24, 0x01	; 1
    103c:	89 83       	std	Y+1, r24	; 0x01
    103e:	89 81       	ldd	r24, Y+1	; 0x01
    1040:	88 23       	and	r24, r24
    1042:	11 f5       	brne	.+68     	; 0x1088 <__vector_14+0x18a>
    1044:	83 e0       	ldi	r24, 0x03	; 3
    1046:	89 83       	std	Y+1, r24	; 0x01
    1048:	e6 e2       	ldi	r30, 0x26	; 38
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	80 81       	ld	r24, Z
    104e:	81 70       	andi	r24, 0x01	; 1
    1050:	8a 83       	std	Y+2, r24	; 0x02
    1052:	8a 81       	ldd	r24, Y+2	; 0x02
    1054:	88 23       	and	r24, r24
    1056:	39 f0       	breq	.+14     	; 0x1066 <__vector_14+0x168>
    1058:	80 91 dc 01 	lds	r24, 0x01DC
    105c:	90 91 df 01 	lds	r25, 0x01DF
    1060:	89 2b       	or	r24, r25
    1062:	80 93 dc 01 	sts	0x01DC, r24
    1066:	80 91 df 01 	lds	r24, 0x01DF
    106a:	88 0f       	add	r24, r24
    106c:	80 93 df 01 	sts	0x01DF, r24
    1070:	80 91 dd 01 	lds	r24, 0x01DD
    1074:	81 50       	subi	r24, 0x01	; 1
    1076:	80 93 dd 01 	sts	0x01DD, r24
    107a:	80 91 dd 01 	lds	r24, 0x01DD
    107e:	88 23       	and	r24, r24
    1080:	19 f4       	brne	.+6      	; 0x1088 <__vector_14+0x18a>
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	80 93 e0 01 	sts	0x01E0, r24
    1088:	89 81       	ldd	r24, Y+1	; 0x01
    108a:	80 93 de 01 	sts	0x01DE, r24
    108e:	0f 90       	pop	r0
    1090:	0f 90       	pop	r0
    1092:	0f 90       	pop	r0
    1094:	cf 91       	pop	r28
    1096:	df 91       	pop	r29
    1098:	ff 91       	pop	r31
    109a:	ef 91       	pop	r30
    109c:	bf 91       	pop	r27
    109e:	af 91       	pop	r26
    10a0:	9f 91       	pop	r25
    10a2:	8f 91       	pop	r24
    10a4:	3f 91       	pop	r19
    10a6:	2f 91       	pop	r18
    10a8:	0f 90       	pop	r0
    10aa:	0f be       	out	0x3f, r0	; 63
    10ac:	0f 90       	pop	r0
    10ae:	1f 90       	pop	r1
    10b0:	18 95       	reti

000010b2 <__cmpsf2>:
    10b2:	2f d0       	rcall	.+94     	; 0x1112 <__fp_cmp>
    10b4:	08 f4       	brcc	.+2      	; 0x10b8 <__cmpsf2+0x6>
    10b6:	81 e0       	ldi	r24, 0x01	; 1
    10b8:	08 95       	ret

000010ba <__fixunssfsi>:
    10ba:	57 d0       	rcall	.+174    	; 0x116a <__fp_splitA>
    10bc:	88 f0       	brcs	.+34     	; 0x10e0 <__fixunssfsi+0x26>
    10be:	9f 57       	subi	r25, 0x7F	; 127
    10c0:	90 f0       	brcs	.+36     	; 0x10e6 <__fixunssfsi+0x2c>
    10c2:	b9 2f       	mov	r27, r25
    10c4:	99 27       	eor	r25, r25
    10c6:	b7 51       	subi	r27, 0x17	; 23
    10c8:	a0 f0       	brcs	.+40     	; 0x10f2 <__fixunssfsi+0x38>
    10ca:	d1 f0       	breq	.+52     	; 0x1100 <__fixunssfsi+0x46>
    10cc:	66 0f       	add	r22, r22
    10ce:	77 1f       	adc	r23, r23
    10d0:	88 1f       	adc	r24, r24
    10d2:	99 1f       	adc	r25, r25
    10d4:	1a f0       	brmi	.+6      	; 0x10dc <__fixunssfsi+0x22>
    10d6:	ba 95       	dec	r27
    10d8:	c9 f7       	brne	.-14     	; 0x10cc <__fixunssfsi+0x12>
    10da:	12 c0       	rjmp	.+36     	; 0x1100 <__fixunssfsi+0x46>
    10dc:	b1 30       	cpi	r27, 0x01	; 1
    10de:	81 f0       	breq	.+32     	; 0x1100 <__fixunssfsi+0x46>
    10e0:	5e d0       	rcall	.+188    	; 0x119e <__fp_zero>
    10e2:	b1 e0       	ldi	r27, 0x01	; 1
    10e4:	08 95       	ret
    10e6:	5b c0       	rjmp	.+182    	; 0x119e <__fp_zero>
    10e8:	67 2f       	mov	r22, r23
    10ea:	78 2f       	mov	r23, r24
    10ec:	88 27       	eor	r24, r24
    10ee:	b8 5f       	subi	r27, 0xF8	; 248
    10f0:	39 f0       	breq	.+14     	; 0x1100 <__fixunssfsi+0x46>
    10f2:	b9 3f       	cpi	r27, 0xF9	; 249
    10f4:	cc f3       	brlt	.-14     	; 0x10e8 <__fixunssfsi+0x2e>
    10f6:	86 95       	lsr	r24
    10f8:	77 95       	ror	r23
    10fa:	67 95       	ror	r22
    10fc:	b3 95       	inc	r27
    10fe:	d9 f7       	brne	.-10     	; 0x10f6 <__fixunssfsi+0x3c>
    1100:	3e f4       	brtc	.+14     	; 0x1110 <__fixunssfsi+0x56>
    1102:	90 95       	com	r25
    1104:	80 95       	com	r24
    1106:	70 95       	com	r23
    1108:	61 95       	neg	r22
    110a:	7f 4f       	sbci	r23, 0xFF	; 255
    110c:	8f 4f       	sbci	r24, 0xFF	; 255
    110e:	9f 4f       	sbci	r25, 0xFF	; 255
    1110:	08 95       	ret

00001112 <__fp_cmp>:
    1112:	99 0f       	add	r25, r25
    1114:	00 08       	sbc	r0, r0
    1116:	55 0f       	add	r21, r21
    1118:	aa 0b       	sbc	r26, r26
    111a:	e0 e8       	ldi	r30, 0x80	; 128
    111c:	fe ef       	ldi	r31, 0xFE	; 254
    111e:	16 16       	cp	r1, r22
    1120:	17 06       	cpc	r1, r23
    1122:	e8 07       	cpc	r30, r24
    1124:	f9 07       	cpc	r31, r25
    1126:	c0 f0       	brcs	.+48     	; 0x1158 <__fp_cmp+0x46>
    1128:	12 16       	cp	r1, r18
    112a:	13 06       	cpc	r1, r19
    112c:	e4 07       	cpc	r30, r20
    112e:	f5 07       	cpc	r31, r21
    1130:	98 f0       	brcs	.+38     	; 0x1158 <__fp_cmp+0x46>
    1132:	62 1b       	sub	r22, r18
    1134:	73 0b       	sbc	r23, r19
    1136:	84 0b       	sbc	r24, r20
    1138:	95 0b       	sbc	r25, r21
    113a:	39 f4       	brne	.+14     	; 0x114a <__fp_cmp+0x38>
    113c:	0a 26       	eor	r0, r26
    113e:	61 f0       	breq	.+24     	; 0x1158 <__fp_cmp+0x46>
    1140:	23 2b       	or	r18, r19
    1142:	24 2b       	or	r18, r20
    1144:	25 2b       	or	r18, r21
    1146:	21 f4       	brne	.+8      	; 0x1150 <__fp_cmp+0x3e>
    1148:	08 95       	ret
    114a:	0a 26       	eor	r0, r26
    114c:	09 f4       	brne	.+2      	; 0x1150 <__fp_cmp+0x3e>
    114e:	a1 40       	sbci	r26, 0x01	; 1
    1150:	a6 95       	lsr	r26
    1152:	8f ef       	ldi	r24, 0xFF	; 255
    1154:	81 1d       	adc	r24, r1
    1156:	81 1d       	adc	r24, r1
    1158:	08 95       	ret

0000115a <__fp_split3>:
    115a:	57 fd       	sbrc	r21, 7
    115c:	90 58       	subi	r25, 0x80	; 128
    115e:	44 0f       	add	r20, r20
    1160:	55 1f       	adc	r21, r21
    1162:	59 f0       	breq	.+22     	; 0x117a <__fp_splitA+0x10>
    1164:	5f 3f       	cpi	r21, 0xFF	; 255
    1166:	71 f0       	breq	.+28     	; 0x1184 <__fp_splitA+0x1a>
    1168:	47 95       	ror	r20

0000116a <__fp_splitA>:
    116a:	88 0f       	add	r24, r24
    116c:	97 fb       	bst	r25, 7
    116e:	99 1f       	adc	r25, r25
    1170:	61 f0       	breq	.+24     	; 0x118a <__fp_splitA+0x20>
    1172:	9f 3f       	cpi	r25, 0xFF	; 255
    1174:	79 f0       	breq	.+30     	; 0x1194 <__fp_splitA+0x2a>
    1176:	87 95       	ror	r24
    1178:	08 95       	ret
    117a:	12 16       	cp	r1, r18
    117c:	13 06       	cpc	r1, r19
    117e:	14 06       	cpc	r1, r20
    1180:	55 1f       	adc	r21, r21
    1182:	f2 cf       	rjmp	.-28     	; 0x1168 <__fp_split3+0xe>
    1184:	46 95       	lsr	r20
    1186:	f1 df       	rcall	.-30     	; 0x116a <__fp_splitA>
    1188:	08 c0       	rjmp	.+16     	; 0x119a <__fp_splitA+0x30>
    118a:	16 16       	cp	r1, r22
    118c:	17 06       	cpc	r1, r23
    118e:	18 06       	cpc	r1, r24
    1190:	99 1f       	adc	r25, r25
    1192:	f1 cf       	rjmp	.-30     	; 0x1176 <__fp_splitA+0xc>
    1194:	86 95       	lsr	r24
    1196:	71 05       	cpc	r23, r1
    1198:	61 05       	cpc	r22, r1
    119a:	08 94       	sec
    119c:	08 95       	ret

0000119e <__fp_zero>:
    119e:	e8 94       	clt

000011a0 <__fp_szero>:
    11a0:	bb 27       	eor	r27, r27
    11a2:	66 27       	eor	r22, r22
    11a4:	77 27       	eor	r23, r23
    11a6:	cb 01       	movw	r24, r22
    11a8:	97 f9       	bld	r25, 7
    11aa:	08 95       	ret

000011ac <__gesf2>:
    11ac:	b2 df       	rcall	.-156    	; 0x1112 <__fp_cmp>
    11ae:	08 f4       	brcc	.+2      	; 0x11b2 <__gesf2+0x6>
    11b0:	8f ef       	ldi	r24, 0xFF	; 255
    11b2:	08 95       	ret

000011b4 <__mulsf3>:
    11b4:	0b d0       	rcall	.+22     	; 0x11cc <__mulsf3x>
    11b6:	78 c0       	rjmp	.+240    	; 0x12a8 <__fp_round>
    11b8:	69 d0       	rcall	.+210    	; 0x128c <__fp_pscA>
    11ba:	28 f0       	brcs	.+10     	; 0x11c6 <__mulsf3+0x12>
    11bc:	6e d0       	rcall	.+220    	; 0x129a <__fp_pscB>
    11be:	18 f0       	brcs	.+6      	; 0x11c6 <__mulsf3+0x12>
    11c0:	95 23       	and	r25, r21
    11c2:	09 f0       	breq	.+2      	; 0x11c6 <__mulsf3+0x12>
    11c4:	5a c0       	rjmp	.+180    	; 0x127a <__fp_inf>
    11c6:	5f c0       	rjmp	.+190    	; 0x1286 <__fp_nan>
    11c8:	11 24       	eor	r1, r1
    11ca:	ea cf       	rjmp	.-44     	; 0x11a0 <__fp_szero>

000011cc <__mulsf3x>:
    11cc:	c6 df       	rcall	.-116    	; 0x115a <__fp_split3>
    11ce:	a0 f3       	brcs	.-24     	; 0x11b8 <__mulsf3+0x4>

000011d0 <__mulsf3_pse>:
    11d0:	95 9f       	mul	r25, r21
    11d2:	d1 f3       	breq	.-12     	; 0x11c8 <__mulsf3+0x14>
    11d4:	95 0f       	add	r25, r21
    11d6:	50 e0       	ldi	r21, 0x00	; 0
    11d8:	55 1f       	adc	r21, r21
    11da:	62 9f       	mul	r22, r18
    11dc:	f0 01       	movw	r30, r0
    11de:	72 9f       	mul	r23, r18
    11e0:	bb 27       	eor	r27, r27
    11e2:	f0 0d       	add	r31, r0
    11e4:	b1 1d       	adc	r27, r1
    11e6:	63 9f       	mul	r22, r19
    11e8:	aa 27       	eor	r26, r26
    11ea:	f0 0d       	add	r31, r0
    11ec:	b1 1d       	adc	r27, r1
    11ee:	aa 1f       	adc	r26, r26
    11f0:	64 9f       	mul	r22, r20
    11f2:	66 27       	eor	r22, r22
    11f4:	b0 0d       	add	r27, r0
    11f6:	a1 1d       	adc	r26, r1
    11f8:	66 1f       	adc	r22, r22
    11fa:	82 9f       	mul	r24, r18
    11fc:	22 27       	eor	r18, r18
    11fe:	b0 0d       	add	r27, r0
    1200:	a1 1d       	adc	r26, r1
    1202:	62 1f       	adc	r22, r18
    1204:	73 9f       	mul	r23, r19
    1206:	b0 0d       	add	r27, r0
    1208:	a1 1d       	adc	r26, r1
    120a:	62 1f       	adc	r22, r18
    120c:	83 9f       	mul	r24, r19
    120e:	a0 0d       	add	r26, r0
    1210:	61 1d       	adc	r22, r1
    1212:	22 1f       	adc	r18, r18
    1214:	74 9f       	mul	r23, r20
    1216:	33 27       	eor	r19, r19
    1218:	a0 0d       	add	r26, r0
    121a:	61 1d       	adc	r22, r1
    121c:	23 1f       	adc	r18, r19
    121e:	84 9f       	mul	r24, r20
    1220:	60 0d       	add	r22, r0
    1222:	21 1d       	adc	r18, r1
    1224:	82 2f       	mov	r24, r18
    1226:	76 2f       	mov	r23, r22
    1228:	6a 2f       	mov	r22, r26
    122a:	11 24       	eor	r1, r1
    122c:	9f 57       	subi	r25, 0x7F	; 127
    122e:	50 40       	sbci	r21, 0x00	; 0
    1230:	8a f0       	brmi	.+34     	; 0x1254 <__mulsf3_pse+0x84>
    1232:	e1 f0       	breq	.+56     	; 0x126c <__mulsf3_pse+0x9c>
    1234:	88 23       	and	r24, r24
    1236:	4a f0       	brmi	.+18     	; 0x124a <__mulsf3_pse+0x7a>
    1238:	ee 0f       	add	r30, r30
    123a:	ff 1f       	adc	r31, r31
    123c:	bb 1f       	adc	r27, r27
    123e:	66 1f       	adc	r22, r22
    1240:	77 1f       	adc	r23, r23
    1242:	88 1f       	adc	r24, r24
    1244:	91 50       	subi	r25, 0x01	; 1
    1246:	50 40       	sbci	r21, 0x00	; 0
    1248:	a9 f7       	brne	.-22     	; 0x1234 <__mulsf3_pse+0x64>
    124a:	9e 3f       	cpi	r25, 0xFE	; 254
    124c:	51 05       	cpc	r21, r1
    124e:	70 f0       	brcs	.+28     	; 0x126c <__mulsf3_pse+0x9c>
    1250:	14 c0       	rjmp	.+40     	; 0x127a <__fp_inf>
    1252:	a6 cf       	rjmp	.-180    	; 0x11a0 <__fp_szero>
    1254:	5f 3f       	cpi	r21, 0xFF	; 255
    1256:	ec f3       	brlt	.-6      	; 0x1252 <__mulsf3_pse+0x82>
    1258:	98 3e       	cpi	r25, 0xE8	; 232
    125a:	dc f3       	brlt	.-10     	; 0x1252 <__mulsf3_pse+0x82>
    125c:	86 95       	lsr	r24
    125e:	77 95       	ror	r23
    1260:	67 95       	ror	r22
    1262:	b7 95       	ror	r27
    1264:	f7 95       	ror	r31
    1266:	e7 95       	ror	r30
    1268:	9f 5f       	subi	r25, 0xFF	; 255
    126a:	c1 f7       	brne	.-16     	; 0x125c <__mulsf3_pse+0x8c>
    126c:	fe 2b       	or	r31, r30
    126e:	88 0f       	add	r24, r24
    1270:	91 1d       	adc	r25, r1
    1272:	96 95       	lsr	r25
    1274:	87 95       	ror	r24
    1276:	97 f9       	bld	r25, 7
    1278:	08 95       	ret

0000127a <__fp_inf>:
    127a:	97 f9       	bld	r25, 7
    127c:	9f 67       	ori	r25, 0x7F	; 127
    127e:	80 e8       	ldi	r24, 0x80	; 128
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	60 e0       	ldi	r22, 0x00	; 0
    1284:	08 95       	ret

00001286 <__fp_nan>:
    1286:	9f ef       	ldi	r25, 0xFF	; 255
    1288:	80 ec       	ldi	r24, 0xC0	; 192
    128a:	08 95       	ret

0000128c <__fp_pscA>:
    128c:	00 24       	eor	r0, r0
    128e:	0a 94       	dec	r0
    1290:	16 16       	cp	r1, r22
    1292:	17 06       	cpc	r1, r23
    1294:	18 06       	cpc	r1, r24
    1296:	09 06       	cpc	r0, r25
    1298:	08 95       	ret

0000129a <__fp_pscB>:
    129a:	00 24       	eor	r0, r0
    129c:	0a 94       	dec	r0
    129e:	12 16       	cp	r1, r18
    12a0:	13 06       	cpc	r1, r19
    12a2:	14 06       	cpc	r1, r20
    12a4:	05 06       	cpc	r0, r21
    12a6:	08 95       	ret

000012a8 <__fp_round>:
    12a8:	09 2e       	mov	r0, r25
    12aa:	03 94       	inc	r0
    12ac:	00 0c       	add	r0, r0
    12ae:	11 f4       	brne	.+4      	; 0x12b4 <__fp_round+0xc>
    12b0:	88 23       	and	r24, r24
    12b2:	52 f0       	brmi	.+20     	; 0x12c8 <__fp_round+0x20>
    12b4:	bb 0f       	add	r27, r27
    12b6:	40 f4       	brcc	.+16     	; 0x12c8 <__fp_round+0x20>
    12b8:	bf 2b       	or	r27, r31
    12ba:	11 f4       	brne	.+4      	; 0x12c0 <__fp_round+0x18>
    12bc:	60 ff       	sbrs	r22, 0
    12be:	04 c0       	rjmp	.+8      	; 0x12c8 <__fp_round+0x20>
    12c0:	6f 5f       	subi	r22, 0xFF	; 255
    12c2:	7f 4f       	sbci	r23, 0xFF	; 255
    12c4:	8f 4f       	sbci	r24, 0xFF	; 255
    12c6:	9f 4f       	sbci	r25, 0xFF	; 255
    12c8:	08 95       	ret

000012ca <__udivmodsi4>:
    12ca:	a1 e2       	ldi	r26, 0x21	; 33
    12cc:	1a 2e       	mov	r1, r26
    12ce:	aa 1b       	sub	r26, r26
    12d0:	bb 1b       	sub	r27, r27
    12d2:	fd 01       	movw	r30, r26
    12d4:	0d c0       	rjmp	.+26     	; 0x12f0 <__udivmodsi4_ep>

000012d6 <__udivmodsi4_loop>:
    12d6:	aa 1f       	adc	r26, r26
    12d8:	bb 1f       	adc	r27, r27
    12da:	ee 1f       	adc	r30, r30
    12dc:	ff 1f       	adc	r31, r31
    12de:	a2 17       	cp	r26, r18
    12e0:	b3 07       	cpc	r27, r19
    12e2:	e4 07       	cpc	r30, r20
    12e4:	f5 07       	cpc	r31, r21
    12e6:	20 f0       	brcs	.+8      	; 0x12f0 <__udivmodsi4_ep>
    12e8:	a2 1b       	sub	r26, r18
    12ea:	b3 0b       	sbc	r27, r19
    12ec:	e4 0b       	sbc	r30, r20
    12ee:	f5 0b       	sbc	r31, r21

000012f0 <__udivmodsi4_ep>:
    12f0:	66 1f       	adc	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	88 1f       	adc	r24, r24
    12f6:	99 1f       	adc	r25, r25
    12f8:	1a 94       	dec	r1
    12fa:	69 f7       	brne	.-38     	; 0x12d6 <__udivmodsi4_loop>
    12fc:	60 95       	com	r22
    12fe:	70 95       	com	r23
    1300:	80 95       	com	r24
    1302:	90 95       	com	r25
    1304:	9b 01       	movw	r18, r22
    1306:	ac 01       	movw	r20, r24
    1308:	bd 01       	movw	r22, r26
    130a:	cf 01       	movw	r24, r30
    130c:	08 95       	ret

0000130e <strcmp>:
    130e:	fb 01       	movw	r30, r22
    1310:	dc 01       	movw	r26, r24
    1312:	8d 91       	ld	r24, X+
    1314:	01 90       	ld	r0, Z+
    1316:	80 19       	sub	r24, r0
    1318:	01 10       	cpse	r0, r1
    131a:	d9 f3       	breq	.-10     	; 0x1312 <strcmp+0x4>
    131c:	99 0b       	sbc	r25, r25
    131e:	08 95       	ret

00001320 <sprintf>:
    1320:	ae e0       	ldi	r26, 0x0E	; 14
    1322:	b0 e0       	ldi	r27, 0x00	; 0
    1324:	e6 e9       	ldi	r30, 0x96	; 150
    1326:	f9 e0       	ldi	r31, 0x09	; 9
    1328:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__prologue_saves__+0x1c>
    132c:	0d 89       	ldd	r16, Y+21	; 0x15
    132e:	1e 89       	ldd	r17, Y+22	; 0x16
    1330:	86 e0       	ldi	r24, 0x06	; 6
    1332:	8c 83       	std	Y+4, r24	; 0x04
    1334:	1a 83       	std	Y+2, r17	; 0x02
    1336:	09 83       	std	Y+1, r16	; 0x01
    1338:	8f ef       	ldi	r24, 0xFF	; 255
    133a:	9f e7       	ldi	r25, 0x7F	; 127
    133c:	9e 83       	std	Y+6, r25	; 0x06
    133e:	8d 83       	std	Y+5, r24	; 0x05
    1340:	9e 01       	movw	r18, r28
    1342:	27 5e       	subi	r18, 0xE7	; 231
    1344:	3f 4f       	sbci	r19, 0xFF	; 255
    1346:	ce 01       	movw	r24, r28
    1348:	01 96       	adiw	r24, 0x01	; 1
    134a:	6f 89       	ldd	r22, Y+23	; 0x17
    134c:	78 8d       	ldd	r23, Y+24	; 0x18
    134e:	a9 01       	movw	r20, r18
    1350:	0e 94 b4 09 	call	0x1368	; 0x1368 <vfprintf>
    1354:	2f 81       	ldd	r18, Y+7	; 0x07
    1356:	38 85       	ldd	r19, Y+8	; 0x08
    1358:	02 0f       	add	r16, r18
    135a:	13 1f       	adc	r17, r19
    135c:	f8 01       	movw	r30, r16
    135e:	10 82       	st	Z, r1
    1360:	2e 96       	adiw	r28, 0x0e	; 14
    1362:	e4 e0       	ldi	r30, 0x04	; 4
    1364:	0c 94 5b 0c 	jmp	0x18b6	; 0x18b6 <__epilogue_restores__+0x1c>

00001368 <vfprintf>:
    1368:	ab e0       	ldi	r26, 0x0B	; 11
    136a:	b0 e0       	ldi	r27, 0x00	; 0
    136c:	ea eb       	ldi	r30, 0xBA	; 186
    136e:	f9 e0       	ldi	r31, 0x09	; 9
    1370:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__prologue_saves__>
    1374:	3c 01       	movw	r6, r24
    1376:	2b 01       	movw	r4, r22
    1378:	5a 01       	movw	r10, r20
    137a:	fc 01       	movw	r30, r24
    137c:	17 82       	std	Z+7, r1	; 0x07
    137e:	16 82       	std	Z+6, r1	; 0x06
    1380:	83 81       	ldd	r24, Z+3	; 0x03
    1382:	81 fd       	sbrc	r24, 1
    1384:	03 c0       	rjmp	.+6      	; 0x138c <vfprintf+0x24>
    1386:	6f ef       	ldi	r22, 0xFF	; 255
    1388:	7f ef       	ldi	r23, 0xFF	; 255
    138a:	c6 c1       	rjmp	.+908    	; 0x1718 <vfprintf+0x3b0>
    138c:	9a e0       	ldi	r25, 0x0A	; 10
    138e:	89 2e       	mov	r8, r25
    1390:	1e 01       	movw	r2, r28
    1392:	08 94       	sec
    1394:	21 1c       	adc	r2, r1
    1396:	31 1c       	adc	r3, r1
    1398:	f3 01       	movw	r30, r6
    139a:	23 81       	ldd	r18, Z+3	; 0x03
    139c:	f2 01       	movw	r30, r4
    139e:	23 fd       	sbrc	r18, 3
    13a0:	85 91       	lpm	r24, Z+
    13a2:	23 ff       	sbrs	r18, 3
    13a4:	81 91       	ld	r24, Z+
    13a6:	2f 01       	movw	r4, r30
    13a8:	88 23       	and	r24, r24
    13aa:	09 f4       	brne	.+2      	; 0x13ae <vfprintf+0x46>
    13ac:	b2 c1       	rjmp	.+868    	; 0x1712 <vfprintf+0x3aa>
    13ae:	85 32       	cpi	r24, 0x25	; 37
    13b0:	39 f4       	brne	.+14     	; 0x13c0 <vfprintf+0x58>
    13b2:	23 fd       	sbrc	r18, 3
    13b4:	85 91       	lpm	r24, Z+
    13b6:	23 ff       	sbrs	r18, 3
    13b8:	81 91       	ld	r24, Z+
    13ba:	2f 01       	movw	r4, r30
    13bc:	85 32       	cpi	r24, 0x25	; 37
    13be:	29 f4       	brne	.+10     	; 0x13ca <vfprintf+0x62>
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	b3 01       	movw	r22, r6
    13c4:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    13c8:	e7 cf       	rjmp	.-50     	; 0x1398 <vfprintf+0x30>
    13ca:	98 2f       	mov	r25, r24
    13cc:	ff 24       	eor	r15, r15
    13ce:	ee 24       	eor	r14, r14
    13d0:	99 24       	eor	r9, r9
    13d2:	ff e1       	ldi	r31, 0x1F	; 31
    13d4:	ff 15       	cp	r31, r15
    13d6:	d0 f0       	brcs	.+52     	; 0x140c <vfprintf+0xa4>
    13d8:	9b 32       	cpi	r25, 0x2B	; 43
    13da:	69 f0       	breq	.+26     	; 0x13f6 <vfprintf+0x8e>
    13dc:	9c 32       	cpi	r25, 0x2C	; 44
    13de:	28 f4       	brcc	.+10     	; 0x13ea <vfprintf+0x82>
    13e0:	90 32       	cpi	r25, 0x20	; 32
    13e2:	59 f0       	breq	.+22     	; 0x13fa <vfprintf+0x92>
    13e4:	93 32       	cpi	r25, 0x23	; 35
    13e6:	91 f4       	brne	.+36     	; 0x140c <vfprintf+0xa4>
    13e8:	0e c0       	rjmp	.+28     	; 0x1406 <vfprintf+0x9e>
    13ea:	9d 32       	cpi	r25, 0x2D	; 45
    13ec:	49 f0       	breq	.+18     	; 0x1400 <vfprintf+0x98>
    13ee:	90 33       	cpi	r25, 0x30	; 48
    13f0:	69 f4       	brne	.+26     	; 0x140c <vfprintf+0xa4>
    13f2:	41 e0       	ldi	r20, 0x01	; 1
    13f4:	24 c0       	rjmp	.+72     	; 0x143e <vfprintf+0xd6>
    13f6:	52 e0       	ldi	r21, 0x02	; 2
    13f8:	f5 2a       	or	r15, r21
    13fa:	84 e0       	ldi	r24, 0x04	; 4
    13fc:	f8 2a       	or	r15, r24
    13fe:	28 c0       	rjmp	.+80     	; 0x1450 <vfprintf+0xe8>
    1400:	98 e0       	ldi	r25, 0x08	; 8
    1402:	f9 2a       	or	r15, r25
    1404:	25 c0       	rjmp	.+74     	; 0x1450 <vfprintf+0xe8>
    1406:	e0 e1       	ldi	r30, 0x10	; 16
    1408:	fe 2a       	or	r15, r30
    140a:	22 c0       	rjmp	.+68     	; 0x1450 <vfprintf+0xe8>
    140c:	f7 fc       	sbrc	r15, 7
    140e:	29 c0       	rjmp	.+82     	; 0x1462 <vfprintf+0xfa>
    1410:	89 2f       	mov	r24, r25
    1412:	80 53       	subi	r24, 0x30	; 48
    1414:	8a 30       	cpi	r24, 0x0A	; 10
    1416:	70 f4       	brcc	.+28     	; 0x1434 <vfprintf+0xcc>
    1418:	f6 fe       	sbrs	r15, 6
    141a:	05 c0       	rjmp	.+10     	; 0x1426 <vfprintf+0xbe>
    141c:	98 9c       	mul	r9, r8
    141e:	90 2c       	mov	r9, r0
    1420:	11 24       	eor	r1, r1
    1422:	98 0e       	add	r9, r24
    1424:	15 c0       	rjmp	.+42     	; 0x1450 <vfprintf+0xe8>
    1426:	e8 9c       	mul	r14, r8
    1428:	e0 2c       	mov	r14, r0
    142a:	11 24       	eor	r1, r1
    142c:	e8 0e       	add	r14, r24
    142e:	f0 e2       	ldi	r31, 0x20	; 32
    1430:	ff 2a       	or	r15, r31
    1432:	0e c0       	rjmp	.+28     	; 0x1450 <vfprintf+0xe8>
    1434:	9e 32       	cpi	r25, 0x2E	; 46
    1436:	29 f4       	brne	.+10     	; 0x1442 <vfprintf+0xda>
    1438:	f6 fc       	sbrc	r15, 6
    143a:	6b c1       	rjmp	.+726    	; 0x1712 <vfprintf+0x3aa>
    143c:	40 e4       	ldi	r20, 0x40	; 64
    143e:	f4 2a       	or	r15, r20
    1440:	07 c0       	rjmp	.+14     	; 0x1450 <vfprintf+0xe8>
    1442:	9c 36       	cpi	r25, 0x6C	; 108
    1444:	19 f4       	brne	.+6      	; 0x144c <vfprintf+0xe4>
    1446:	50 e8       	ldi	r21, 0x80	; 128
    1448:	f5 2a       	or	r15, r21
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <vfprintf+0xe8>
    144c:	98 36       	cpi	r25, 0x68	; 104
    144e:	49 f4       	brne	.+18     	; 0x1462 <vfprintf+0xfa>
    1450:	f2 01       	movw	r30, r4
    1452:	23 fd       	sbrc	r18, 3
    1454:	95 91       	lpm	r25, Z+
    1456:	23 ff       	sbrs	r18, 3
    1458:	91 91       	ld	r25, Z+
    145a:	2f 01       	movw	r4, r30
    145c:	99 23       	and	r25, r25
    145e:	09 f0       	breq	.+2      	; 0x1462 <vfprintf+0xfa>
    1460:	b8 cf       	rjmp	.-144    	; 0x13d2 <vfprintf+0x6a>
    1462:	89 2f       	mov	r24, r25
    1464:	85 54       	subi	r24, 0x45	; 69
    1466:	83 30       	cpi	r24, 0x03	; 3
    1468:	18 f0       	brcs	.+6      	; 0x1470 <vfprintf+0x108>
    146a:	80 52       	subi	r24, 0x20	; 32
    146c:	83 30       	cpi	r24, 0x03	; 3
    146e:	38 f4       	brcc	.+14     	; 0x147e <vfprintf+0x116>
    1470:	44 e0       	ldi	r20, 0x04	; 4
    1472:	50 e0       	ldi	r21, 0x00	; 0
    1474:	a4 0e       	add	r10, r20
    1476:	b5 1e       	adc	r11, r21
    1478:	5f e3       	ldi	r21, 0x3F	; 63
    147a:	59 83       	std	Y+1, r21	; 0x01
    147c:	0f c0       	rjmp	.+30     	; 0x149c <vfprintf+0x134>
    147e:	93 36       	cpi	r25, 0x63	; 99
    1480:	31 f0       	breq	.+12     	; 0x148e <vfprintf+0x126>
    1482:	93 37       	cpi	r25, 0x73	; 115
    1484:	79 f0       	breq	.+30     	; 0x14a4 <vfprintf+0x13c>
    1486:	93 35       	cpi	r25, 0x53	; 83
    1488:	09 f0       	breq	.+2      	; 0x148c <vfprintf+0x124>
    148a:	56 c0       	rjmp	.+172    	; 0x1538 <vfprintf+0x1d0>
    148c:	20 c0       	rjmp	.+64     	; 0x14ce <vfprintf+0x166>
    148e:	f5 01       	movw	r30, r10
    1490:	80 81       	ld	r24, Z
    1492:	89 83       	std	Y+1, r24	; 0x01
    1494:	42 e0       	ldi	r20, 0x02	; 2
    1496:	50 e0       	ldi	r21, 0x00	; 0
    1498:	a4 0e       	add	r10, r20
    149a:	b5 1e       	adc	r11, r21
    149c:	61 01       	movw	r12, r2
    149e:	01 e0       	ldi	r16, 0x01	; 1
    14a0:	10 e0       	ldi	r17, 0x00	; 0
    14a2:	12 c0       	rjmp	.+36     	; 0x14c8 <vfprintf+0x160>
    14a4:	f5 01       	movw	r30, r10
    14a6:	c0 80       	ld	r12, Z
    14a8:	d1 80       	ldd	r13, Z+1	; 0x01
    14aa:	f6 fc       	sbrc	r15, 6
    14ac:	03 c0       	rjmp	.+6      	; 0x14b4 <vfprintf+0x14c>
    14ae:	6f ef       	ldi	r22, 0xFF	; 255
    14b0:	7f ef       	ldi	r23, 0xFF	; 255
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <vfprintf+0x150>
    14b4:	69 2d       	mov	r22, r9
    14b6:	70 e0       	ldi	r23, 0x00	; 0
    14b8:	42 e0       	ldi	r20, 0x02	; 2
    14ba:	50 e0       	ldi	r21, 0x00	; 0
    14bc:	a4 0e       	add	r10, r20
    14be:	b5 1e       	adc	r11, r21
    14c0:	c6 01       	movw	r24, r12
    14c2:	0e 94 9c 0b 	call	0x1738	; 0x1738 <strnlen>
    14c6:	8c 01       	movw	r16, r24
    14c8:	5f e7       	ldi	r21, 0x7F	; 127
    14ca:	f5 22       	and	r15, r21
    14cc:	14 c0       	rjmp	.+40     	; 0x14f6 <vfprintf+0x18e>
    14ce:	f5 01       	movw	r30, r10
    14d0:	c0 80       	ld	r12, Z
    14d2:	d1 80       	ldd	r13, Z+1	; 0x01
    14d4:	f6 fc       	sbrc	r15, 6
    14d6:	03 c0       	rjmp	.+6      	; 0x14de <vfprintf+0x176>
    14d8:	6f ef       	ldi	r22, 0xFF	; 255
    14da:	7f ef       	ldi	r23, 0xFF	; 255
    14dc:	02 c0       	rjmp	.+4      	; 0x14e2 <vfprintf+0x17a>
    14de:	69 2d       	mov	r22, r9
    14e0:	70 e0       	ldi	r23, 0x00	; 0
    14e2:	42 e0       	ldi	r20, 0x02	; 2
    14e4:	50 e0       	ldi	r21, 0x00	; 0
    14e6:	a4 0e       	add	r10, r20
    14e8:	b5 1e       	adc	r11, r21
    14ea:	c6 01       	movw	r24, r12
    14ec:	0e 94 91 0b 	call	0x1722	; 0x1722 <strnlen_P>
    14f0:	8c 01       	movw	r16, r24
    14f2:	50 e8       	ldi	r21, 0x80	; 128
    14f4:	f5 2a       	or	r15, r21
    14f6:	f3 fe       	sbrs	r15, 3
    14f8:	07 c0       	rjmp	.+14     	; 0x1508 <vfprintf+0x1a0>
    14fa:	1a c0       	rjmp	.+52     	; 0x1530 <vfprintf+0x1c8>
    14fc:	80 e2       	ldi	r24, 0x20	; 32
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	b3 01       	movw	r22, r6
    1502:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    1506:	ea 94       	dec	r14
    1508:	8e 2d       	mov	r24, r14
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	08 17       	cp	r16, r24
    150e:	19 07       	cpc	r17, r25
    1510:	a8 f3       	brcs	.-22     	; 0x14fc <vfprintf+0x194>
    1512:	0e c0       	rjmp	.+28     	; 0x1530 <vfprintf+0x1c8>
    1514:	f6 01       	movw	r30, r12
    1516:	f7 fc       	sbrc	r15, 7
    1518:	85 91       	lpm	r24, Z+
    151a:	f7 fe       	sbrs	r15, 7
    151c:	81 91       	ld	r24, Z+
    151e:	6f 01       	movw	r12, r30
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	b3 01       	movw	r22, r6
    1524:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    1528:	e1 10       	cpse	r14, r1
    152a:	ea 94       	dec	r14
    152c:	01 50       	subi	r16, 0x01	; 1
    152e:	10 40       	sbci	r17, 0x00	; 0
    1530:	01 15       	cp	r16, r1
    1532:	11 05       	cpc	r17, r1
    1534:	79 f7       	brne	.-34     	; 0x1514 <vfprintf+0x1ac>
    1536:	ea c0       	rjmp	.+468    	; 0x170c <vfprintf+0x3a4>
    1538:	94 36       	cpi	r25, 0x64	; 100
    153a:	11 f0       	breq	.+4      	; 0x1540 <vfprintf+0x1d8>
    153c:	99 36       	cpi	r25, 0x69	; 105
    153e:	69 f5       	brne	.+90     	; 0x159a <vfprintf+0x232>
    1540:	f7 fe       	sbrs	r15, 7
    1542:	08 c0       	rjmp	.+16     	; 0x1554 <vfprintf+0x1ec>
    1544:	f5 01       	movw	r30, r10
    1546:	20 81       	ld	r18, Z
    1548:	31 81       	ldd	r19, Z+1	; 0x01
    154a:	42 81       	ldd	r20, Z+2	; 0x02
    154c:	53 81       	ldd	r21, Z+3	; 0x03
    154e:	84 e0       	ldi	r24, 0x04	; 4
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	0a c0       	rjmp	.+20     	; 0x1568 <vfprintf+0x200>
    1554:	f5 01       	movw	r30, r10
    1556:	80 81       	ld	r24, Z
    1558:	91 81       	ldd	r25, Z+1	; 0x01
    155a:	9c 01       	movw	r18, r24
    155c:	44 27       	eor	r20, r20
    155e:	37 fd       	sbrc	r19, 7
    1560:	40 95       	com	r20
    1562:	54 2f       	mov	r21, r20
    1564:	82 e0       	ldi	r24, 0x02	; 2
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	a8 0e       	add	r10, r24
    156a:	b9 1e       	adc	r11, r25
    156c:	9f e6       	ldi	r25, 0x6F	; 111
    156e:	f9 22       	and	r15, r25
    1570:	57 ff       	sbrs	r21, 7
    1572:	09 c0       	rjmp	.+18     	; 0x1586 <vfprintf+0x21e>
    1574:	50 95       	com	r21
    1576:	40 95       	com	r20
    1578:	30 95       	com	r19
    157a:	21 95       	neg	r18
    157c:	3f 4f       	sbci	r19, 0xFF	; 255
    157e:	4f 4f       	sbci	r20, 0xFF	; 255
    1580:	5f 4f       	sbci	r21, 0xFF	; 255
    1582:	e0 e8       	ldi	r30, 0x80	; 128
    1584:	fe 2a       	or	r15, r30
    1586:	ca 01       	movw	r24, r20
    1588:	b9 01       	movw	r22, r18
    158a:	a1 01       	movw	r20, r2
    158c:	2a e0       	ldi	r18, 0x0A	; 10
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <__ultoa_invert>
    1594:	d8 2e       	mov	r13, r24
    1596:	d2 18       	sub	r13, r2
    1598:	40 c0       	rjmp	.+128    	; 0x161a <vfprintf+0x2b2>
    159a:	95 37       	cpi	r25, 0x75	; 117
    159c:	29 f4       	brne	.+10     	; 0x15a8 <vfprintf+0x240>
    159e:	1f 2d       	mov	r17, r15
    15a0:	1f 7e       	andi	r17, 0xEF	; 239
    15a2:	2a e0       	ldi	r18, 0x0A	; 10
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	1d c0       	rjmp	.+58     	; 0x15e2 <vfprintf+0x27a>
    15a8:	1f 2d       	mov	r17, r15
    15aa:	19 7f       	andi	r17, 0xF9	; 249
    15ac:	9f 36       	cpi	r25, 0x6F	; 111
    15ae:	61 f0       	breq	.+24     	; 0x15c8 <vfprintf+0x260>
    15b0:	90 37       	cpi	r25, 0x70	; 112
    15b2:	20 f4       	brcc	.+8      	; 0x15bc <vfprintf+0x254>
    15b4:	98 35       	cpi	r25, 0x58	; 88
    15b6:	09 f0       	breq	.+2      	; 0x15ba <vfprintf+0x252>
    15b8:	ac c0       	rjmp	.+344    	; 0x1712 <vfprintf+0x3aa>
    15ba:	0f c0       	rjmp	.+30     	; 0x15da <vfprintf+0x272>
    15bc:	90 37       	cpi	r25, 0x70	; 112
    15be:	39 f0       	breq	.+14     	; 0x15ce <vfprintf+0x266>
    15c0:	98 37       	cpi	r25, 0x78	; 120
    15c2:	09 f0       	breq	.+2      	; 0x15c6 <vfprintf+0x25e>
    15c4:	a6 c0       	rjmp	.+332    	; 0x1712 <vfprintf+0x3aa>
    15c6:	04 c0       	rjmp	.+8      	; 0x15d0 <vfprintf+0x268>
    15c8:	28 e0       	ldi	r18, 0x08	; 8
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	0a c0       	rjmp	.+20     	; 0x15e2 <vfprintf+0x27a>
    15ce:	10 61       	ori	r17, 0x10	; 16
    15d0:	14 fd       	sbrc	r17, 4
    15d2:	14 60       	ori	r17, 0x04	; 4
    15d4:	20 e1       	ldi	r18, 0x10	; 16
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	04 c0       	rjmp	.+8      	; 0x15e2 <vfprintf+0x27a>
    15da:	14 fd       	sbrc	r17, 4
    15dc:	16 60       	ori	r17, 0x06	; 6
    15de:	20 e1       	ldi	r18, 0x10	; 16
    15e0:	32 e0       	ldi	r19, 0x02	; 2
    15e2:	17 ff       	sbrs	r17, 7
    15e4:	08 c0       	rjmp	.+16     	; 0x15f6 <vfprintf+0x28e>
    15e6:	f5 01       	movw	r30, r10
    15e8:	60 81       	ld	r22, Z
    15ea:	71 81       	ldd	r23, Z+1	; 0x01
    15ec:	82 81       	ldd	r24, Z+2	; 0x02
    15ee:	93 81       	ldd	r25, Z+3	; 0x03
    15f0:	44 e0       	ldi	r20, 0x04	; 4
    15f2:	50 e0       	ldi	r21, 0x00	; 0
    15f4:	08 c0       	rjmp	.+16     	; 0x1606 <vfprintf+0x29e>
    15f6:	f5 01       	movw	r30, r10
    15f8:	80 81       	ld	r24, Z
    15fa:	91 81       	ldd	r25, Z+1	; 0x01
    15fc:	bc 01       	movw	r22, r24
    15fe:	80 e0       	ldi	r24, 0x00	; 0
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	42 e0       	ldi	r20, 0x02	; 2
    1604:	50 e0       	ldi	r21, 0x00	; 0
    1606:	a4 0e       	add	r10, r20
    1608:	b5 1e       	adc	r11, r21
    160a:	a1 01       	movw	r20, r2
    160c:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <__ultoa_invert>
    1610:	d8 2e       	mov	r13, r24
    1612:	d2 18       	sub	r13, r2
    1614:	8f e7       	ldi	r24, 0x7F	; 127
    1616:	f8 2e       	mov	r15, r24
    1618:	f1 22       	and	r15, r17
    161a:	f6 fe       	sbrs	r15, 6
    161c:	0b c0       	rjmp	.+22     	; 0x1634 <vfprintf+0x2cc>
    161e:	5e ef       	ldi	r21, 0xFE	; 254
    1620:	f5 22       	and	r15, r21
    1622:	d9 14       	cp	r13, r9
    1624:	38 f4       	brcc	.+14     	; 0x1634 <vfprintf+0x2cc>
    1626:	f4 fe       	sbrs	r15, 4
    1628:	07 c0       	rjmp	.+14     	; 0x1638 <vfprintf+0x2d0>
    162a:	f2 fc       	sbrc	r15, 2
    162c:	05 c0       	rjmp	.+10     	; 0x1638 <vfprintf+0x2d0>
    162e:	8f ee       	ldi	r24, 0xEF	; 239
    1630:	f8 22       	and	r15, r24
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <vfprintf+0x2d0>
    1634:	1d 2d       	mov	r17, r13
    1636:	01 c0       	rjmp	.+2      	; 0x163a <vfprintf+0x2d2>
    1638:	19 2d       	mov	r17, r9
    163a:	f4 fe       	sbrs	r15, 4
    163c:	0d c0       	rjmp	.+26     	; 0x1658 <vfprintf+0x2f0>
    163e:	fe 01       	movw	r30, r28
    1640:	ed 0d       	add	r30, r13
    1642:	f1 1d       	adc	r31, r1
    1644:	80 81       	ld	r24, Z
    1646:	80 33       	cpi	r24, 0x30	; 48
    1648:	19 f4       	brne	.+6      	; 0x1650 <vfprintf+0x2e8>
    164a:	99 ee       	ldi	r25, 0xE9	; 233
    164c:	f9 22       	and	r15, r25
    164e:	08 c0       	rjmp	.+16     	; 0x1660 <vfprintf+0x2f8>
    1650:	1f 5f       	subi	r17, 0xFF	; 255
    1652:	f2 fe       	sbrs	r15, 2
    1654:	05 c0       	rjmp	.+10     	; 0x1660 <vfprintf+0x2f8>
    1656:	03 c0       	rjmp	.+6      	; 0x165e <vfprintf+0x2f6>
    1658:	8f 2d       	mov	r24, r15
    165a:	86 78       	andi	r24, 0x86	; 134
    165c:	09 f0       	breq	.+2      	; 0x1660 <vfprintf+0x2f8>
    165e:	1f 5f       	subi	r17, 0xFF	; 255
    1660:	0f 2d       	mov	r16, r15
    1662:	f3 fc       	sbrc	r15, 3
    1664:	14 c0       	rjmp	.+40     	; 0x168e <vfprintf+0x326>
    1666:	f0 fe       	sbrs	r15, 0
    1668:	0f c0       	rjmp	.+30     	; 0x1688 <vfprintf+0x320>
    166a:	1e 15       	cp	r17, r14
    166c:	10 f0       	brcs	.+4      	; 0x1672 <vfprintf+0x30a>
    166e:	9d 2c       	mov	r9, r13
    1670:	0b c0       	rjmp	.+22     	; 0x1688 <vfprintf+0x320>
    1672:	9d 2c       	mov	r9, r13
    1674:	9e 0c       	add	r9, r14
    1676:	91 1a       	sub	r9, r17
    1678:	1e 2d       	mov	r17, r14
    167a:	06 c0       	rjmp	.+12     	; 0x1688 <vfprintf+0x320>
    167c:	80 e2       	ldi	r24, 0x20	; 32
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	b3 01       	movw	r22, r6
    1682:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    1686:	1f 5f       	subi	r17, 0xFF	; 255
    1688:	1e 15       	cp	r17, r14
    168a:	c0 f3       	brcs	.-16     	; 0x167c <vfprintf+0x314>
    168c:	04 c0       	rjmp	.+8      	; 0x1696 <vfprintf+0x32e>
    168e:	1e 15       	cp	r17, r14
    1690:	10 f4       	brcc	.+4      	; 0x1696 <vfprintf+0x32e>
    1692:	e1 1a       	sub	r14, r17
    1694:	01 c0       	rjmp	.+2      	; 0x1698 <vfprintf+0x330>
    1696:	ee 24       	eor	r14, r14
    1698:	04 ff       	sbrs	r16, 4
    169a:	0f c0       	rjmp	.+30     	; 0x16ba <vfprintf+0x352>
    169c:	80 e3       	ldi	r24, 0x30	; 48
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	b3 01       	movw	r22, r6
    16a2:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    16a6:	02 ff       	sbrs	r16, 2
    16a8:	1d c0       	rjmp	.+58     	; 0x16e4 <vfprintf+0x37c>
    16aa:	01 fd       	sbrc	r16, 1
    16ac:	03 c0       	rjmp	.+6      	; 0x16b4 <vfprintf+0x34c>
    16ae:	88 e7       	ldi	r24, 0x78	; 120
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	0e c0       	rjmp	.+28     	; 0x16d0 <vfprintf+0x368>
    16b4:	88 e5       	ldi	r24, 0x58	; 88
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	0b c0       	rjmp	.+22     	; 0x16d0 <vfprintf+0x368>
    16ba:	80 2f       	mov	r24, r16
    16bc:	86 78       	andi	r24, 0x86	; 134
    16be:	91 f0       	breq	.+36     	; 0x16e4 <vfprintf+0x37c>
    16c0:	01 ff       	sbrs	r16, 1
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <vfprintf+0x360>
    16c4:	8b e2       	ldi	r24, 0x2B	; 43
    16c6:	01 c0       	rjmp	.+2      	; 0x16ca <vfprintf+0x362>
    16c8:	80 e2       	ldi	r24, 0x20	; 32
    16ca:	f7 fc       	sbrc	r15, 7
    16cc:	8d e2       	ldi	r24, 0x2D	; 45
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	b3 01       	movw	r22, r6
    16d2:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    16d6:	06 c0       	rjmp	.+12     	; 0x16e4 <vfprintf+0x37c>
    16d8:	80 e3       	ldi	r24, 0x30	; 48
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	b3 01       	movw	r22, r6
    16de:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    16e2:	9a 94       	dec	r9
    16e4:	d9 14       	cp	r13, r9
    16e6:	c0 f3       	brcs	.-16     	; 0x16d8 <vfprintf+0x370>
    16e8:	da 94       	dec	r13
    16ea:	f1 01       	movw	r30, r2
    16ec:	ed 0d       	add	r30, r13
    16ee:	f1 1d       	adc	r31, r1
    16f0:	80 81       	ld	r24, Z
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	b3 01       	movw	r22, r6
    16f6:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    16fa:	dd 20       	and	r13, r13
    16fc:	a9 f7       	brne	.-22     	; 0x16e8 <vfprintf+0x380>
    16fe:	06 c0       	rjmp	.+12     	; 0x170c <vfprintf+0x3a4>
    1700:	80 e2       	ldi	r24, 0x20	; 32
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	b3 01       	movw	r22, r6
    1706:	0e 94 a7 0b 	call	0x174e	; 0x174e <fputc>
    170a:	ea 94       	dec	r14
    170c:	ee 20       	and	r14, r14
    170e:	c1 f7       	brne	.-16     	; 0x1700 <vfprintf+0x398>
    1710:	43 ce       	rjmp	.-890    	; 0x1398 <vfprintf+0x30>
    1712:	f3 01       	movw	r30, r6
    1714:	66 81       	ldd	r22, Z+6	; 0x06
    1716:	77 81       	ldd	r23, Z+7	; 0x07
    1718:	cb 01       	movw	r24, r22
    171a:	2b 96       	adiw	r28, 0x0b	; 11
    171c:	e2 e1       	ldi	r30, 0x12	; 18
    171e:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__epilogue_restores__>

00001722 <strnlen_P>:
    1722:	fc 01       	movw	r30, r24
    1724:	05 90       	lpm	r0, Z+
    1726:	61 50       	subi	r22, 0x01	; 1
    1728:	70 40       	sbci	r23, 0x00	; 0
    172a:	01 10       	cpse	r0, r1
    172c:	d8 f7       	brcc	.-10     	; 0x1724 <strnlen_P+0x2>
    172e:	80 95       	com	r24
    1730:	90 95       	com	r25
    1732:	8e 0f       	add	r24, r30
    1734:	9f 1f       	adc	r25, r31
    1736:	08 95       	ret

00001738 <strnlen>:
    1738:	fc 01       	movw	r30, r24
    173a:	61 50       	subi	r22, 0x01	; 1
    173c:	70 40       	sbci	r23, 0x00	; 0
    173e:	01 90       	ld	r0, Z+
    1740:	01 10       	cpse	r0, r1
    1742:	d8 f7       	brcc	.-10     	; 0x173a <strnlen+0x2>
    1744:	80 95       	com	r24
    1746:	90 95       	com	r25
    1748:	8e 0f       	add	r24, r30
    174a:	9f 1f       	adc	r25, r31
    174c:	08 95       	ret

0000174e <fputc>:
    174e:	0f 93       	push	r16
    1750:	1f 93       	push	r17
    1752:	cf 93       	push	r28
    1754:	df 93       	push	r29
    1756:	8c 01       	movw	r16, r24
    1758:	eb 01       	movw	r28, r22
    175a:	8b 81       	ldd	r24, Y+3	; 0x03
    175c:	81 ff       	sbrs	r24, 1
    175e:	1b c0       	rjmp	.+54     	; 0x1796 <fputc+0x48>
    1760:	82 ff       	sbrs	r24, 2
    1762:	0d c0       	rjmp	.+26     	; 0x177e <fputc+0x30>
    1764:	2e 81       	ldd	r18, Y+6	; 0x06
    1766:	3f 81       	ldd	r19, Y+7	; 0x07
    1768:	8c 81       	ldd	r24, Y+4	; 0x04
    176a:	9d 81       	ldd	r25, Y+5	; 0x05
    176c:	28 17       	cp	r18, r24
    176e:	39 07       	cpc	r19, r25
    1770:	64 f4       	brge	.+24     	; 0x178a <fputc+0x3c>
    1772:	e8 81       	ld	r30, Y
    1774:	f9 81       	ldd	r31, Y+1	; 0x01
    1776:	01 93       	st	Z+, r16
    1778:	f9 83       	std	Y+1, r31	; 0x01
    177a:	e8 83       	st	Y, r30
    177c:	06 c0       	rjmp	.+12     	; 0x178a <fputc+0x3c>
    177e:	e8 85       	ldd	r30, Y+8	; 0x08
    1780:	f9 85       	ldd	r31, Y+9	; 0x09
    1782:	80 2f       	mov	r24, r16
    1784:	09 95       	icall
    1786:	89 2b       	or	r24, r25
    1788:	31 f4       	brne	.+12     	; 0x1796 <fputc+0x48>
    178a:	8e 81       	ldd	r24, Y+6	; 0x06
    178c:	9f 81       	ldd	r25, Y+7	; 0x07
    178e:	01 96       	adiw	r24, 0x01	; 1
    1790:	9f 83       	std	Y+7, r25	; 0x07
    1792:	8e 83       	std	Y+6, r24	; 0x06
    1794:	02 c0       	rjmp	.+4      	; 0x179a <fputc+0x4c>
    1796:	0f ef       	ldi	r16, 0xFF	; 255
    1798:	1f ef       	ldi	r17, 0xFF	; 255
    179a:	c8 01       	movw	r24, r16
    179c:	df 91       	pop	r29
    179e:	cf 91       	pop	r28
    17a0:	1f 91       	pop	r17
    17a2:	0f 91       	pop	r16
    17a4:	08 95       	ret

000017a6 <__ultoa_invert>:
    17a6:	fa 01       	movw	r30, r20
    17a8:	aa 27       	eor	r26, r26
    17aa:	28 30       	cpi	r18, 0x08	; 8
    17ac:	51 f1       	breq	.+84     	; 0x1802 <__ultoa_invert+0x5c>
    17ae:	20 31       	cpi	r18, 0x10	; 16
    17b0:	81 f1       	breq	.+96     	; 0x1812 <__ultoa_invert+0x6c>
    17b2:	e8 94       	clt
    17b4:	6f 93       	push	r22
    17b6:	6e 7f       	andi	r22, 0xFE	; 254
    17b8:	6e 5f       	subi	r22, 0xFE	; 254
    17ba:	7f 4f       	sbci	r23, 0xFF	; 255
    17bc:	8f 4f       	sbci	r24, 0xFF	; 255
    17be:	9f 4f       	sbci	r25, 0xFF	; 255
    17c0:	af 4f       	sbci	r26, 0xFF	; 255
    17c2:	b1 e0       	ldi	r27, 0x01	; 1
    17c4:	3e d0       	rcall	.+124    	; 0x1842 <__ultoa_invert+0x9c>
    17c6:	b4 e0       	ldi	r27, 0x04	; 4
    17c8:	3c d0       	rcall	.+120    	; 0x1842 <__ultoa_invert+0x9c>
    17ca:	67 0f       	add	r22, r23
    17cc:	78 1f       	adc	r23, r24
    17ce:	89 1f       	adc	r24, r25
    17d0:	9a 1f       	adc	r25, r26
    17d2:	a1 1d       	adc	r26, r1
    17d4:	68 0f       	add	r22, r24
    17d6:	79 1f       	adc	r23, r25
    17d8:	8a 1f       	adc	r24, r26
    17da:	91 1d       	adc	r25, r1
    17dc:	a1 1d       	adc	r26, r1
    17de:	6a 0f       	add	r22, r26
    17e0:	71 1d       	adc	r23, r1
    17e2:	81 1d       	adc	r24, r1
    17e4:	91 1d       	adc	r25, r1
    17e6:	a1 1d       	adc	r26, r1
    17e8:	20 d0       	rcall	.+64     	; 0x182a <__ultoa_invert+0x84>
    17ea:	09 f4       	brne	.+2      	; 0x17ee <__ultoa_invert+0x48>
    17ec:	68 94       	set
    17ee:	3f 91       	pop	r19
    17f0:	2a e0       	ldi	r18, 0x0A	; 10
    17f2:	26 9f       	mul	r18, r22
    17f4:	11 24       	eor	r1, r1
    17f6:	30 19       	sub	r19, r0
    17f8:	30 5d       	subi	r19, 0xD0	; 208
    17fa:	31 93       	st	Z+, r19
    17fc:	de f6       	brtc	.-74     	; 0x17b4 <__ultoa_invert+0xe>
    17fe:	cf 01       	movw	r24, r30
    1800:	08 95       	ret
    1802:	46 2f       	mov	r20, r22
    1804:	47 70       	andi	r20, 0x07	; 7
    1806:	40 5d       	subi	r20, 0xD0	; 208
    1808:	41 93       	st	Z+, r20
    180a:	b3 e0       	ldi	r27, 0x03	; 3
    180c:	0f d0       	rcall	.+30     	; 0x182c <__ultoa_invert+0x86>
    180e:	c9 f7       	brne	.-14     	; 0x1802 <__ultoa_invert+0x5c>
    1810:	f6 cf       	rjmp	.-20     	; 0x17fe <__ultoa_invert+0x58>
    1812:	46 2f       	mov	r20, r22
    1814:	4f 70       	andi	r20, 0x0F	; 15
    1816:	40 5d       	subi	r20, 0xD0	; 208
    1818:	4a 33       	cpi	r20, 0x3A	; 58
    181a:	18 f0       	brcs	.+6      	; 0x1822 <__ultoa_invert+0x7c>
    181c:	49 5d       	subi	r20, 0xD9	; 217
    181e:	31 fd       	sbrc	r19, 1
    1820:	40 52       	subi	r20, 0x20	; 32
    1822:	41 93       	st	Z+, r20
    1824:	02 d0       	rcall	.+4      	; 0x182a <__ultoa_invert+0x84>
    1826:	a9 f7       	brne	.-22     	; 0x1812 <__ultoa_invert+0x6c>
    1828:	ea cf       	rjmp	.-44     	; 0x17fe <__ultoa_invert+0x58>
    182a:	b4 e0       	ldi	r27, 0x04	; 4
    182c:	a6 95       	lsr	r26
    182e:	97 95       	ror	r25
    1830:	87 95       	ror	r24
    1832:	77 95       	ror	r23
    1834:	67 95       	ror	r22
    1836:	ba 95       	dec	r27
    1838:	c9 f7       	brne	.-14     	; 0x182c <__ultoa_invert+0x86>
    183a:	00 97       	sbiw	r24, 0x00	; 0
    183c:	61 05       	cpc	r22, r1
    183e:	71 05       	cpc	r23, r1
    1840:	08 95       	ret
    1842:	9b 01       	movw	r18, r22
    1844:	ac 01       	movw	r20, r24
    1846:	0a 2e       	mov	r0, r26
    1848:	06 94       	lsr	r0
    184a:	57 95       	ror	r21
    184c:	47 95       	ror	r20
    184e:	37 95       	ror	r19
    1850:	27 95       	ror	r18
    1852:	ba 95       	dec	r27
    1854:	c9 f7       	brne	.-14     	; 0x1848 <__ultoa_invert+0xa2>
    1856:	62 0f       	add	r22, r18
    1858:	73 1f       	adc	r23, r19
    185a:	84 1f       	adc	r24, r20
    185c:	95 1f       	adc	r25, r21
    185e:	a0 1d       	adc	r26, r0
    1860:	08 95       	ret

00001862 <__prologue_saves__>:
    1862:	2f 92       	push	r2
    1864:	3f 92       	push	r3
    1866:	4f 92       	push	r4
    1868:	5f 92       	push	r5
    186a:	6f 92       	push	r6
    186c:	7f 92       	push	r7
    186e:	8f 92       	push	r8
    1870:	9f 92       	push	r9
    1872:	af 92       	push	r10
    1874:	bf 92       	push	r11
    1876:	cf 92       	push	r12
    1878:	df 92       	push	r13
    187a:	ef 92       	push	r14
    187c:	ff 92       	push	r15
    187e:	0f 93       	push	r16
    1880:	1f 93       	push	r17
    1882:	cf 93       	push	r28
    1884:	df 93       	push	r29
    1886:	cd b7       	in	r28, 0x3d	; 61
    1888:	de b7       	in	r29, 0x3e	; 62
    188a:	ca 1b       	sub	r28, r26
    188c:	db 0b       	sbc	r29, r27
    188e:	0f b6       	in	r0, 0x3f	; 63
    1890:	f8 94       	cli
    1892:	de bf       	out	0x3e, r29	; 62
    1894:	0f be       	out	0x3f, r0	; 63
    1896:	cd bf       	out	0x3d, r28	; 61
    1898:	09 94       	ijmp

0000189a <__epilogue_restores__>:
    189a:	2a 88       	ldd	r2, Y+18	; 0x12
    189c:	39 88       	ldd	r3, Y+17	; 0x11
    189e:	48 88       	ldd	r4, Y+16	; 0x10
    18a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    18a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    18a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    18a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    18a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    18aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    18ac:	b9 84       	ldd	r11, Y+9	; 0x09
    18ae:	c8 84       	ldd	r12, Y+8	; 0x08
    18b0:	df 80       	ldd	r13, Y+7	; 0x07
    18b2:	ee 80       	ldd	r14, Y+6	; 0x06
    18b4:	fd 80       	ldd	r15, Y+5	; 0x05
    18b6:	0c 81       	ldd	r16, Y+4	; 0x04
    18b8:	1b 81       	ldd	r17, Y+3	; 0x03
    18ba:	aa 81       	ldd	r26, Y+2	; 0x02
    18bc:	b9 81       	ldd	r27, Y+1	; 0x01
    18be:	ce 0f       	add	r28, r30
    18c0:	d1 1d       	adc	r29, r1
    18c2:	0f b6       	in	r0, 0x3f	; 63
    18c4:	f8 94       	cli
    18c6:	de bf       	out	0x3e, r29	; 62
    18c8:	0f be       	out	0x3f, r0	; 63
    18ca:	cd bf       	out	0x3d, r28	; 61
    18cc:	ed 01       	movw	r28, r26
    18ce:	08 95       	ret

000018d0 <_exit>:
    18d0:	f8 94       	cli

000018d2 <__stop_program>:
    18d2:	ff cf       	rjmp	.-2      	; 0x18d2 <__stop_program>
